(self["webpackChunk"] = self["webpackChunk"] || []).push([[289],{

/***/ 75:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* provided dependency */ var process = __webpack_require__(34155);
// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);

//# sourceMappingURL=performance-now.js.map


/***/ }),

/***/ 54087:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var now = __webpack_require__(75)
  , root = typeof window === 'undefined' ? __webpack_require__.g : window
  , vendors = ['moz', 'webkit']
  , suffix = 'AnimationFrame'
  , raf = root['request' + suffix]
  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

for(var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix]
  caf = root[vendors[i] + 'Cancel' + suffix]
      || root[vendors[i] + 'CancelRequest' + suffix]
}

// Some versions of FF have rAF but not cAF
if(!raf || !caf) {
  var last = 0
    , id = 0
    , queue = []
    , frameDuration = 1000 / 60

  raf = function(callback) {
    if(queue.length === 0) {
      var _now = now()
        , next = Math.max(0, frameDuration - (_now - last))
      last = next + _now
      setTimeout(function() {
        var cp = queue.slice(0)
        // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue
        queue.length = 0
        for(var i = 0; i < cp.length; i++) {
          if(!cp[i].cancelled) {
            try{
              cp[i].callback(last)
            } catch(e) {
              setTimeout(function() { throw e }, 0)
            }
          }
        }
      }, Math.round(next))
    }
    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    })
    return id
  }

  caf = function(handle) {
    for(var i = 0; i < queue.length; i++) {
      if(queue[i].handle === handle) {
        queue[i].cancelled = true
      }
    }
  }
}

module.exports = function(fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn)
}
module.exports.cancel = function() {
  caf.apply(root, arguments)
}
module.exports.polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf
  object.cancelAnimationFrame = caf
}


/***/ }),

/***/ 1289:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": function() { return /* binding */ rc_queue_anim_es; }
});

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
var toConsumableArray = __webpack_require__(74902);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__(1413);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 1 modules
var slicedToArray = __webpack_require__(97685);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(91);
// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(67294);
// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(73935);
// EXTERNAL MODULE: ./node_modules/tween-one/es/animate/ticker.js
var ticker = __webpack_require__(85879);
// EXTERNAL MODULE: ./node_modules/tween-one/es/index.js + 8 modules
var es = __webpack_require__(24923);
;// CONCATENATED MODULE: ./node_modules/rc-queue-anim/es/utils.js

var windowIsUndefined = !(typeof window !== 'undefined' && window.document && window.document.createElement);
function toArrayChildren(children) {
  var ret = [];
  react.Children.forEach(children, function (c) {
    ret.push(c);
  });
  return ret;
}
function findChildInChildrenByKey(children, key) {
  var ret = null;

  if (children) {
    children.forEach(function (c) {
      if (ret || !c) {
        return;
      }

      if (c.key === key) {
        ret = c;
      }
    });
  }

  return ret;
}
function mergeChildren(prev, next) {
  var ret = []; // For each key of `next`, the list of keys to insert before that key in
  // the combined list

  var nextChildrenPending = {};
  var pendingChildren = [];
  var followChildrenKey;
  prev.forEach(function (c) {
    if (!c) {
      return;
    }

    if (findChildInChildrenByKey(next, c.key)) {
      if (pendingChildren.length) {
        nextChildrenPending[c.key] = pendingChildren;
        pendingChildren = [];
      }

      followChildrenKey = c.key;
    } else if (c.key) {
      pendingChildren.push(c);
    }
  });

  if (!followChildrenKey) {
    ret = ret.concat(pendingChildren);
  }

  next.forEach(function (c) {
    if (!c) {
      return;
    }

    if (nextChildrenPending.hasOwnProperty(c.key)) {
      ret = ret.concat(nextChildrenPending[c.key]);
    }

    ret.push(c);

    if (c.key === followChildrenKey) {
      ret = ret.concat(pendingChildren);
    }
  });
  return ret;
}
function transformArguments(arg, key, i) {
  var result;

  if (typeof arg === 'function') {
    result = arg({
      key: key,
      index: i
    });
  } else {
    result = arg;
  }

  if (Array.isArray(result)) {
    if (result.length === 2) {
      return result;
    }

    return [result[0], result[0]];
  }

  return [result, result];
}
;// CONCATENATED MODULE: ./node_modules/rc-queue-anim/es/animTypes.js
/* harmony default export */ var animTypes = ({
  left: {
    opacity: [1, 0],
    translateX: [0, -30]
  },
  top: {
    opacity: [1, 0],
    translateY: [0, -30]
  },
  right: {
    opacity: [1, 0],
    translateX: [0, 30]
  },
  bottom: {
    opacity: [1, 0],
    translateY: [0, 30]
  },
  alpha: {
    opacity: [1, 0]
  },
  scale: {
    opacity: [1, 0],
    scale: [1, 0]
  },
  scaleBig: {
    opacity: [1, 0],
    scale: [1, 2]
  },
  scaleX: {
    opacity: [1, 0],
    scaleX: [1, 0]
  },
  scaleY: {
    opacity: [1, 0],
    scaleY: [1, 0]
  }
});
;// CONCATENATED MODULE: ./node_modules/rc-queue-anim/es/QueueAnim.js




var _excluded = ["component", "componentProps", "interval", "duration", "delay", "type", "animConfig", "ease", "leaveReverse", "forcedReplay", "animatingClassName", "onEnd", "appear"];






var noop = function noop() {};

/* harmony default export */ var QueueAnim = (/*#__PURE__*/(0,react.forwardRef)(function (props, ref) {
  var _props$component = props.component,
      component = _props$component === void 0 ? 'div' : _props$component,
      _props$componentProps = props.componentProps,
      componentProps = _props$componentProps === void 0 ? {} : _props$componentProps,
      _props$interval = props.interval,
      interval = _props$interval === void 0 ? 100 : _props$interval,
      _props$duration = props.duration,
      duration = _props$duration === void 0 ? 450 : _props$duration,
      _props$delay = props.delay,
      delay = _props$delay === void 0 ? 0 : _props$delay,
      _props$type = props.type,
      type = _props$type === void 0 ? 'right' : _props$type,
      _props$animConfig = props.animConfig,
      animConfig = _props$animConfig === void 0 ? null : _props$animConfig,
      _props$ease = props.ease,
      ease = _props$ease === void 0 ? 'easeOutQuart' : _props$ease,
      _props$leaveReverse = props.leaveReverse,
      leaveReverse = _props$leaveReverse === void 0 ? false : _props$leaveReverse,
      _props$forcedReplay = props.forcedReplay,
      forcedReplay = _props$forcedReplay === void 0 ? false : _props$forcedReplay,
      _props$animatingClass = props.animatingClassName,
      animatingClassName = _props$animatingClass === void 0 ? ['queue-anim-entering', 'queue-anim-leaving'] : _props$animatingClass,
      _props$onEnd = props.onEnd,
      onEnd = _props$onEnd === void 0 ? noop : _props$onEnd,
      _props$appear = props.appear,
      appear = _props$appear === void 0 ? true : _props$appear,
      tagProps = (0,objectWithoutProperties/* default */.Z)(props, _excluded);
  /**
   * @param childrenShow;
   * 记录 animation 里是否需要 startAnim;
   * 当前元素是否处在显示状态
   * enterBegin 到 leaveComplete 之前都处于显示状态
   */


  var childrenShow = (0,react.useRef)({});
  /**
   * @param keysToEnter;
   * 记录进场的 key;
   */

  var keysToEnter = (0,react.useRef)([]);
  var recordKeysToEnter = (0,react.useRef)([]);
  /**
   * @param keysToLeave;
   * 记录出场的 key;
   */

  var keysToLeave = (0,react.useRef)([]);
  var recordKeysToLeave = (0,react.useRef)([]);
  /**
   * @param placeholderTimeoutIds;
   * 进场时 deley 的 timeout 记录;
   */

  var placeholderTimeoutIds = (0,react.useRef)({});
  /**
   * @param childRefs;
   * 储存 children 的 ref;
   */

  var childRefs = (0,react.useRef)({});
  /**
   * @param recordAnimKeys;
   * 记录启动动画 key
   */

  var recordAnimKeys = (0,react.useRef)({});
  /**
   * @param recordAnimKeys;
   * 记录启动动画 key
   */

  var recordTweenKeys = (0,react.useRef)({});
  /**
   * @param oneEnterBool
   * 记录第一次进入
   */

  var oneEnterBool = (0,react.useRef)(false);
  var originalChildren = (0,react.useRef)([]);

  var _useState = (0,react.useState)(),
      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),
      child = _useState2[0],
      setChild = _useState2[1];

  var _useState3 = (0,react.useState)({}),
      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),
      childShow = _useState4[0],
      setChildShow = _useState4[1];

  var getTweenSingleConfig = function getTweenSingleConfig(data, num, enterOrLeave) {
    var obj = {};
    Object.keys(data).forEach(function (key) {
      if (Array.isArray(data[key])) {
        obj[key] = data[key][num];
      } else if (!enterOrLeave && !num || enterOrLeave && num) {
        obj[key] = data[key];
      }
    });
    return obj;
  };

  var getTweenAnimConfig = function getTweenAnimConfig(data, num, enterOrLeave) {
    if (Array.isArray(data)) {
      return data.map(function (item) {
        return getTweenSingleConfig(item, num, enterOrLeave);
      });
    }

    return getTweenSingleConfig(data, num, enterOrLeave);
  };

  var getTweenType = function getTweenType($type, num) {
    var data = animTypes[$type];
    return getTweenAnimConfig(data, num);
  };

  var getAnimData = function getAnimData(key, i, enterOrLeave, startOrEnd) {
    return (
      /**
       * transformArguments 第一个为 enter, 第二个为 leave；
       * getTweenAnimConfig or getTweenType 第一个为到达的位置， 第二个为开始的位置。
       * 用 tween-one 的数组来实现老的动画逻辑。。。
       */
      animConfig ? getTweenAnimConfig(transformArguments(animConfig, key, i)[enterOrLeave], startOrEnd, enterOrLeave) : getTweenType(transformArguments(type, key, i)[enterOrLeave], startOrEnd)
    );
  };

  var getTweenData = function getTweenData(key, i, $type) {
    var enterOrLeave = $type === 'enter' ? 0 : 1;
    var start = $type === 'enter' ? 1 : 0;
    var end = $type === 'enter' ? 0 : 1;
    var animate = getAnimData(key, i, enterOrLeave, end);
    var startAnim = $type === 'enter' && (forcedReplay || !childrenShow.current[key]) ? getAnimData(key, i, enterOrLeave, start) : null;
    var $ease = transformArguments(ease, key, i)[enterOrLeave];
    var $duration = transformArguments(duration, key, i)[enterOrLeave];

    if (Array.isArray(ease) && (ease.length > 2 || Array.isArray(ease[0]))) {
      $ease = $ease.map(function (num) {
        return num * 100;
      });
      $ease = "M0,100C".concat($ease[0], ",").concat(100 - $ease[1], ",").concat($ease[2], ",").concat(100 - $ease[3], ",100,0");
    }

    return {
      startAnim: startAnim,
      animate: animate,
      ease: $ease,
      duration: $duration
    };
  };

  var enterBegin = function enterBegin(key, e) {
    var elem = e.targets;
    elem.className = elem.className.replace(animatingClassName[1], '');

    if (elem.className.indexOf(animatingClassName[0]) === -1) {
      elem.className = "".concat(elem.className, " ").concat(animatingClassName[0]).trim();
    }

    if (keysToEnter.current.indexOf(key) >= 0) {
      keysToEnter.current.splice(keysToEnter.current.indexOf(key), 1);
    }

    childrenShow.current[key] = true;
  };

  var enterComplete = function enterComplete(key, e) {
    if (keysToLeave.current.indexOf(key) >= 0) {
      return;
    }

    var elem = e.targets;
    elem.className = elem.className.replace(animatingClassName[0], '').trim();
    delete recordTweenKeys.current[key];
    onEnd({
      key: key,
      type: 'enter',
      target: elem
    });
  };

  var leaveBegin = function leaveBegin(key, e) {
    var elem = e.targets;
    elem.className = elem.className.replace(animatingClassName[0], '');

    if (elem.className.indexOf(animatingClassName[1]) === -1) {
      elem.className = "".concat(elem.className, " ").concat(animatingClassName[1]).trim();
    }
  };

  var leaveComplete = function leaveComplete(key, e) {
    // 切换时同时触发 onComplete。 手动跳出。。。
    toArrayChildren(props.children).findIndex(function (c) {
      return c && c.key === key;
    });

    if (toArrayChildren(props.children).findIndex(function (c) {
      return c && c.key === key;
    }) >= 0) {
      return;
    }

    delete childrenShow.current[key];
    delete recordTweenKeys.current[key];
    originalChildren.current = originalChildren.current.filter(function (c) {
      return c.key !== key;
    }); // 这里不用启动动画，，直接删；

    if (keysToLeave.current.indexOf(key) >= 0) {
      keysToLeave.current.splice(keysToLeave.current.indexOf(key), 1);
    }

    var needLeave = keysToLeave.current.some(function (c) {
      return childShow[c];
    });

    if (!needLeave) {
      var currentChildren = toArrayChildren(props.children);
      setChild(currentChildren);
      setChildShow((0,objectSpread2/* default */.Z)({}, childrenShow.current));
      recordKeysToLeave.current.forEach(function (k) {
        delete recordAnimKeys.current[k];
      });
    }

    var elem = e.targets;
    elem.className = elem.className.replace(animatingClassName[1], '').trim();
    onEnd({
      key: key,
      type: 'leave',
      target: elem
    });
  };

  var performEnterBegin = function performEnterBegin(key) {
    childShow[key] = true;
    ticker/* default.clear */.Z.clear(placeholderTimeoutIds.current[key]);
    delete placeholderTimeoutIds.current[key];
    setChildShow((0,objectSpread2/* default */.Z)({}, childShow));
  };

  var performEnter = function performEnter(key, i) {
    var $interval = transformArguments(interval, key, i)[0];
    var $delay = transformArguments(delay, key, i)[0];
    placeholderTimeoutIds.current[key] = ticker/* default.timeout */.Z.timeout(function () {
      performEnterBegin(key);
    }, $interval * i + $delay);
  };

  var performLeave = function performLeave(key) {
    ticker/* default.clear */.Z.clear(placeholderTimeoutIds.current[key]);
    delete placeholderTimeoutIds.current[key];
  };

  var getTweenOneEnterOrLeave = function getTweenOneEnterOrLeave(key, i, $delay, $type) {
    var animateData = getTweenData(key, i, $type);

    var onStart = function onStart(e) {
      ($type === 'enter' ? enterBegin : leaveBegin)(key, e);
    };

    var onComplete = function onComplete(e) {
      ($type === 'enter' ? enterComplete : leaveComplete)(key, e);
    };

    if (Array.isArray(animateData.animate)) {
      var length = animateData.animate.length - 1;
      var animation = animateData.animate.map(function (item, ii) {
        return (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, item), {}, {
          startAt: animateData.startAnim ? animateData.startAnim[ii] : undefined,
          duration: animateData.duration / length,
          delay: !ii && $type === 'leave' ? $delay : 0,
          onStart: !ii ? onStart : undefined,
          onComplete: ii === length ? onComplete : undefined
        });
      });
      return animation;
    }

    return (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, animateData.animate), {}, {
      startAt: animateData.startAnim || undefined,
      ease: animateData.ease,
      duration: animateData.duration,
      onStart: onStart,
      onComplete: onComplete,
      delay: $delay
    });
  };

  (0,react.useEffect)(function () {
    return function () {
      Object.keys(recordTweenKeys.current).forEach(function (key) {
        var tween = recordTweenKeys.current[key];

        if (!tween) {
          return;
        }

        tween.kill();
      });
    };
  }, []);
  (0,react.useEffect)(function () {
    var nextChildren = toArrayChildren(props.children).filter(function (c) {
      return c;
    });
    var currentChildren = originalChildren.current.filter(function (item) {
      return item;
    });
    var newChildren = mergeChildren(currentChildren, nextChildren);
    var $keysToEnter = [];
    var $keysToLeave = [];

    if (!appear && !oneEnterBool.current) {
      var $childShow = {};
      newChildren.forEach(function (c) {
        if (!c || !c.key) {
          return;
        }

        $childShow[c.key] = true;
      });
      originalChildren.current = newChildren;
      childrenShow.current = (0,objectSpread2/* default */.Z)({}, $childShow);
      setChildShow($childShow);
    } else {
      // console.log(nextChildren, recordAnimKeys.current, keysToEnter.current, keysToLeave.current);
      currentChildren.forEach(function (c) {
        if (!c) {
          return;
        }

        var key = c.key;
        var hasNext = findChildInChildrenByKey(nextChildren, key);

        if (!hasNext && key) {
          $keysToLeave.push(key);
          ticker/* default.clear */.Z.clear(placeholderTimeoutIds.current[key]);
          delete placeholderTimeoutIds.current[key];
        }
      });
      nextChildren.forEach(function (c) {
        if (!c) {
          return;
        }

        var key = c.key;
        var hasPrev = findChildInChildrenByKey(currentChildren, key); // 如果 nextChildren 和当前的一致，且动画里是出场，改回进场；

        if (!hasPrev && key || (!recordAnimKeys.current[key] || recordAnimKeys.current[key] === 'leave' || keysToEnter.current.indexOf(key) >= 0) && $keysToLeave.indexOf(key) === -1) {
          $keysToEnter.push(key);
        }
      });
    } // console.log('child update', $keysToEnter, $keysToLeave, newChildren);


    keysToEnter.current = $keysToEnter; // keysToEnter 在启动时就会删除；

    recordKeysToEnter.current = [].concat($keysToEnter);
    keysToLeave.current = $keysToLeave;
    recordKeysToLeave.current = [].concat($keysToLeave); // console.log($keysToEnter, $keysToLeave);

    setChild(newChildren);
  }, [props.children]);
  (0,react.useLayoutEffect)(function () {
    originalChildren.current = child || [];

    if (appear || oneEnterBool.current) {
      var $keysToEnter = (0,toConsumableArray/* default */.Z)(keysToEnter.current);

      var $keysToLeave = (0,toConsumableArray/* default */.Z)(keysToLeave.current);

      $keysToEnter.forEach(performEnter);
      $keysToLeave.forEach(performLeave);
    }

    if (child) {
      oneEnterBool.current = true;
    }
  }, [child]);
  (0,react.useLayoutEffect)(function () {
    if (child) {
      child.forEach(function (item) {
        var key = item.key;
        var dom = childRefs.current[key];

        if (!dom) {
          return;
        }

        var animation;
        var index = keysToLeave.current.indexOf(key); // children.findIndex(c => c.key === key);

        var $interval = transformArguments(interval, key, index);
        var $delay = transformArguments(delay, key, index); // 处理出场

        if (index >= 0) {
          if (recordAnimKeys.current[key] === 'leave') {
            return;
          }

          var order = leaveReverse ? keysToLeave.current.length - index - 1 : index;
          var d = $interval[1] * order + $delay[1];
          animation = getTweenOneEnterOrLeave(key, index, d, 'leave');
          recordAnimKeys.current[key] = 'leave';
        } else {
          if (recordAnimKeys.current[key] === 'enter' || keysToEnter.current.indexOf(key) === -1) {
            return;
          }

          index = recordKeysToEnter.current.indexOf(key);

          var _d = $interval[0] * index + $delay[0]; // console.log(recordAnimKeys.current[key], dom);


          animation = getTweenOneEnterOrLeave(key, index, recordAnimKeys.current[key] === 'leave' ? _d : 0, 'enter');
          recordAnimKeys.current[key] = 'enter';
        }

        if (recordTweenKeys.current[key]) {
          recordTweenKeys.current[key].kill();
        }

        if (forcedReplay) {
          var anim = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, Array.isArray(animation) ? animation[0].startAt : animation.startAt), {}, {
            type: 'set'
          });

          (0,es/* default */.ZP)(dom, {
            animation: anim
          });
        }

        recordTweenKeys.current[key] = (0,es/* default */.ZP)(dom, {
          animation: animation
        });
      });
    }
  }, [childShow, child]);
  return (0,react.useMemo)(function () {
    // console.log('--------render--------', childShow);
    if (windowIsUndefined) {
      return /*#__PURE__*/(0,react.createElement)(component, (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, tagProps), componentProps), {}, {
        ref: ref
      }));
    }

    var childrenToRender = toArrayChildren(child).map(function (item) {
      if (!item || !item.key) {
        return item;
      }

      return childShow[item.key] && /*#__PURE__*/(0,react.cloneElement)(item, {
        ref: function ref(c) {
          childRefs.current[item.key] = c instanceof Element ? c : (0,react_dom.findDOMNode)(c);

          if (!c) {
            delete childRefs.current[item.key];
          }
        },
        key: item.key
      });
    });

    var p = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, tagProps), componentProps), {}, {
      ref: ref
    });

    return /*#__PURE__*/(0,react.createElement)(component, p, childrenToRender);
  }, [childShow, child]);
}));
;// CONCATENATED MODULE: ./node_modules/rc-queue-anim/es/index.js
// export this package's api

/* harmony default export */ var rc_queue_anim_es = (QueueAnim);


/***/ }),

/***/ 52191:
/***/ (function(__unused_webpack_module, exports) {

"use strict";
var __webpack_unused_export__;


__webpack_unused_export__ = ({
  value: true
});
__webpack_unused_export__ = toCssLowerCase;
exports.Rs = toStyleUpperCase;
__webpack_unused_export__ = toFixed;
__webpack_unused_export__ = createMatrix;
exports.Yf = checkStyleName;
exports.Lo = getGsapType;
exports.lu = parseColor;
exports.hy = parseShadow;
exports.Lq = getColor;
__webpack_unused_export__ = isTransform;
exports.dt = isConvert;
exports.GX = splitFilterToObject;
__webpack_unused_export__ = getMatrix;
exports.Ck = getTransform;
exports.YJ = stylesToCss;
__webpack_unused_export__ = getUnit;
__webpack_unused_export__ = getValues;
__webpack_unused_export__ = findStyleByName;
__webpack_unused_export__ = mergeStyle;
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridColumn: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

var unquotedContentValueRegex = /^(normal|none|(\b(url\([^)]*\)|chapter_counter|attr\([^)]*\)|(no-)?(open|close)-quote|inherit)((\b\s*)|$|\s+))+)$/;

var IE = function () {
  if (typeof document === 'undefined') {
    return false;
  }
  if (navigator && (navigator.userAgent.indexOf("MSIE 8.0") > 0 || navigator.userAgent.indexOf("MSIE 9.0") > 0)) {
    return true;
  }
  return false;
}();

var rnd = 100000;

var colorLookup = {
  aqua: [0, 255, 255, 1],
  lime: [0, 255, 0, 1],
  silver: [192, 192, 192, 1],
  black: [0, 0, 0, 1],
  maroon: [128, 0, 0, 1],
  teal: [0, 128, 128, 1],
  blue: [0, 0, 255, 1],
  navy: [0, 0, 128, 1],
  white: [255, 255, 255, 1],
  fuchsia: [255, 0, 255, 1],
  olive: [128, 128, 0, 1],
  yellow: [255, 255, 0, 1],
  orange: [255, 165, 0, 1],
  gray: [128, 128, 128, 1],
  purple: [128, 0, 128, 1],
  green: [0, 128, 0, 1],
  red: [255, 0, 0, 1],
  pink: [255, 192, 203, 1],
  cyan: [0, 255, 255, 1],
  transparent: [255, 255, 255, 0]
};

var DEG2RAD = Math.PI / 180;
var RAD2DEG = 180 / Math.PI;

var $cssList = {
  _lists: {
    transformsBase: ['translate', 'translateX', 'translateY', 'scale', 'scaleX', 'scaleY', 'skewX', 'skewY', 'rotateZ', 'rotate'],
    transforms3D: ['translate3d', 'translateZ', 'scaleZ', 'rotateX', 'rotateY', 'perspective']
  },
  transformGroup: { translate: 1, translate3d: 1, scale: 1, scale3d: 1, rotate: 1, rotate3d: 1, skew: 1 },
  filter: ['grayScale', 'sepia', 'hueRotate', 'invert', 'brightness', 'contrast', 'blur'],
  filterConvert: { grayScale: 'grayscale', hueRotate: 'hue-rotate' }
};
$cssList._lists.transformsBase = !IE ? $cssList._lists.transformsBase.concat($cssList._lists.transforms3D) : $cssList._lists.transformsBase;

var hexExp = __webpack_unused_export__ = /#([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{3})/;

var rgbAndHslExp = __webpack_unused_export__ = /((rgb|hsl)[a]?)+\((?:\d|\.\d)+(?:(deg|\%|)),[\s+]?(?:\d|\.\d)+(?:(deg|\%|)),[\s+]?(?:\d|\.\d)+(?:(deg|%|))(,[\s+]?(?:\d|\.\d)+(?:(deg|\%|)))?\)/;

var colorRegExp = exports.rV = /#([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{3})|((rgb|hsl)[a]?)+\((?:\d|\.\d)+(?:(deg|\%)?),[\s+]?(?:\d|\.\d)+(?:(deg|\%)?),[\s+]?(?:\d|\.\d)+(?:(deg|%)?)(,[\s+]?(?:\d|\.\d)+(?:(deg|\%)?))?\)/;

var colorNumExp = __webpack_unused_export__ = /(?:\d|\.\d)+(%?)/g;

var cssList = exports._T = $cssList;

function toCssLowerCase(d) {
  return d.replace(/[A-Z]/, function ($1) {
    return '-' + $1.toLocaleLowerCase();
  });
}

function toStyleUpperCase(d) {
  return d.replace(/-(.?)/g, function ($1) {
    return $1.replace('-', '').toLocaleUpperCase();
  });
}

function toFixed(num, length) {
  var _rnd = length ? Math.pow(10, length) : rnd;
  var n = num | 0;
  var dec = num - n;
  var fixed = num;
  if (dec) {
    var r = (dec * _rnd + (num < 0 ? -0.5 : 0.5) | 0) / _rnd;
    var t = r | 0;
    var str = r.toString();
    var decStr = str.split('.')[1] || '';
    fixed = '' + (num < 0 && !(n + t) ? '-' : '') + (n + t) + '.' + decStr;
  }
  return parseFloat(fixed);
}

function createMatrix(style) {
  if (typeof document === 'undefined') {
    return null;
  }
  var matrixs = ['WebKitCSS', 'MozCSS', 'DOM', 'MsCSS', 'MSCSS', 'OCSS', 'CSS'].filter(function (key) {
    return key + 'Matrix' in window;
  });
  if (matrixs.length) {
    return new window[matrixs[0] + 'Matrix'](style);
  }
  console.warn('Browsers do not support matrix.');
  return '';
}

function checkStyleName(p) {
  if (typeof document === 'undefined') {
    return null;
  }
  var a = ['O', 'Moz', 'ms', 'Ms', 'Webkit'];
  if (p !== 'filter' && p in document.body.style) {
    return p;
  }
  var _p = p.charAt(0).toUpperCase() + p.substr(1);
  var prefixCss = a.filter(function (key) {
    return '' + key + _p in document.body.style;
  });
  return prefixCss[0] ? '' + prefixCss[0] + _p : null;
}

function getGsapType(_p) {
  var p = _p;
  p = p === 'x' ? 'translateX' : p;
  p = p === 'y' ? 'translateY' : p;
  p = p === 'z' ? 'translateZ' : p;
  // p = p === 'r' ? 'rotate' : p;
  return p;
}

// href: https://www.w3schools.com/lib/w3color.js
var hueToRgb = function hueToRgb(t1, t2, hue) {
  if (hue < 0) hue += 6;
  if (hue >= 6) hue -= 6;
  if (hue < 1) return (t2 - t1) * hue + t1;else if (hue < 3) return t2;else if (hue < 4) return (t2 - t1) * (4 - hue) + t1;else return t1;
};

function parseColor(value) {
  var colorArray = colorLookup.transparent;
  var color = value;
  var r = void 0;
  var g = void 0;
  var b = void 0;
  if (!color) {
    colorArray = colorLookup.transparent;
  } else if (colorLookup[color]) {
    colorArray = colorLookup[color];
  } else if (typeof color === 'number') {
    colorArray = [color >> 16, color >> 8 & 255, color & 255];
  } else {
    if (color.charAt(color.length - 1) === ',') {
      color = color.substr(0, color.length - 1);
    }
    if (color.match(hexExp)) {
      color = color.substr(1);
      // is #FFF
      if (color.length === 3) {
        r = color.charAt(0);
        g = color.charAt(1);
        b = color.charAt(2);
        color = '' + r + r + g + g + b + b + 'ff';
      }
      if (color.length === 6) {
        color += 'ff';
      }
      color = parseInt(color, 16);
      colorArray = [color >> 24 & 255, color >> 16 & 255, color >> 8 & 255, parseFloat(((color & 255) / 255).toFixed(2))];
    } else if (color.match(/^hsl/)) {
      colorArray = color.match(colorNumExp);
      var alpha = colorArray[3];
      alpha = typeof alpha === 'string' && alpha.match('%') ? parseFloat(alpha) / 100 : parseFloat('' + (alpha || '1'));
      var hue = parseFloat(colorArray[0]) / 60;
      var sat = parseFloat(colorArray[1]) / 100;
      var light = parseFloat(colorArray[2]) / 100;
      var t2 = light <= 0.5 ? light * (sat + 1) : light + sat - light * sat;
      var t1 = light * 2 - t2;
      r = Math.round(hueToRgb(t1, t2, hue + 2) * 255);
      g = Math.round(hueToRgb(t1, t2, hue) * 255);
      b = Math.round(hueToRgb(t1, t2, hue - 2) * 255);
      colorArray = [r, g, b, alpha];
    } else {
      // rgb(a?) 拆分
      colorArray = color.match(colorNumExp) || colorLookup.transparent;
      colorArray = colorArray.map(function (c) {
        return parseFloat(c);
      });
      if (colorArray.length === 3) {
        colorArray.push(1);
      }
    }
  }
  return colorArray;
}

function parseShadow(v, key) {
  /**
   * text-shadow: x y blur color;
   * box-shadow: x y blur spread color inset;
   */
  var textKey = key && toStyleUpperCase(key);
  if (!v) {
    if (textKey === 'boxShadow') {
      return [0, 0, 0, 0, 0, 0, 0, 0]; //0.85
    }
    return [0, 0, 0, 0, 0, 0, 0];
  }
  var vArr = v.replace(/,\s+/gi, ',').split(/\s+/).filter(function (c) {
    return c;
  });
  var inset = vArr.indexOf('inset');
  if (inset >= 0) {
    vArr.splice(inset, 1);
  }
  var colorStr = vArr.find(function (c) {
    return colorLookup[c] || c.match(/#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})|(rgb|hsl)+(?:a)?\((.*)\)/i);
  }) || 'black';
  var colorIndex = vArr.indexOf(colorStr);
  vArr.splice(colorIndex, 1);
  var color = parseColor(colorStr);
  color[3] = typeof color[3] === 'number' ? color[3] : 1;
  if (textKey === 'boxShadow' && vArr.length < 4) {
    vArr.push(0);
  }
  return vArr.concat(color, inset >= 0 ? ['inset'] : []);
}

function getColor(v) {
  var rgba = v.length === 4 ? 'rgba' : 'rgb';
  var _vars = v.map(function (d, i) {
    return i < 3 ? Math.round(d) : d;
  });
  return rgba + '(' + _vars.join(',') + ')';
}

function isTransform(p) {
  return cssList._lists.transformsBase.indexOf(p) >= 0 ? 'transform' : p;
}

function isConvert(p) {
  var cssName = isTransform(p);
  return cssList.filter.indexOf(cssName) >= 0 ? 'filter' : cssName;
}

function splitFilterToObject(data) {
  if (data === 'none' || !data || data === '') {
    return null;
  }
  var filter = data.replace(/\s+/g, '').split(')').filter(function (item) {
    return item;
  });
  var startData = {};
  filter.forEach(function (item) {
    var dataArr = item.split('(');
    startData[dataArr[0]] = dataArr[1];
  });
  return startData;
}

function getMatrix(t) {
  var arr = t.match(/(?:\-|\b)[\d\-\.e]+\b/gi);
  var m = {};
  if (arr.length === 6) {
    m.m11 = parseFloat(arr[0]);
    m.m12 = parseFloat(arr[1]);
    m.m13 = 0;
    m.m14 = 0;
    m.m21 = parseFloat(arr[2]);
    m.m22 = parseFloat(arr[3]);
    m.m23 = 0;
    m.m24 = 0;
    m.m31 = 0;
    m.m32 = 0;
    m.m33 = 1;
    m.m34 = 0;
    m.m41 = parseFloat(arr[4]);
    m.m42 = parseFloat(arr[5]);
    m.m43 = 0;
    m.m44 = 0;
  } else {
    arr.forEach(function (item, i) {
      var ii = i % 4 + 1;
      var j = Math.floor(i / 4) + 1;
      m['m' + j + ii] = parseFloat(item);
    });
  }
  return m;
}

function transformNoMatrix(transform) {
  var tm = {};
  tm.translateX = 0;
  tm.translateY = 0;
  tm.translateZ = 0;
  tm.rotate = 0;
  tm.rotateX = 0;
  tm.rotateY = 0;
  tm.scaleX = 1;
  tm.scaleY = 1;
  tm.scaleZ = 1;
  tm.skewX = 0;
  tm.skewY = 0;
  tm.perspective = 0;
  (transform.trim().match(/(\w+)\([^\)]+\)/ig) || []).forEach(function (str) {
    var strArray = str.split('(');
    var key = strArray[0].trim();
    var value = strArray[1].replace(')', '').trim();
    if (value.match(/%|em|rem/ig)) {
      console.warn('value(' + value + ') must be absolute, not relative, has been converted to absolute.');
    }
    value = value.replace(/px|deg|\)/ig, '');
    if (cssList.transformGroup[key] && key !== 'rotate') {
      value = value.split(',').map(function (num) {
        return parseFloat(num);
      });
      if (key === 'scale3d' || key === 'translate3d') {
        ['X', 'Y', 'Z'].forEach(function (s, i) {
          var $key = key.substring(0, key.length - 2);
          tm['' + $key + s] = value[i] || tm['' + $key + s];
        });
      } else if (key === 'rotate3d') {
        tm.rotateX = value[0] && value[3] || tm.rotateX;
        tm.rotateY = value[1] && value[3] || tm.rotateY;
        tm.rotate = value[2] && value[3] || tm.rotate;
      } else {
        ['X', 'Y'].forEach(function (s, i) {
          tm['' + key + s] = value[i] || tm['' + key + s];
        });
      }
    } else {
      if (key === 'rotateZ') {
        tm.rotate = parseFloat(value) || tm.rotate;
      } else {
        tm[key] = parseFloat(value) || tm[key];
      }
    }
  });
  return tm;
}

function getTransform(transform) {
  var _transform = !transform || transform === 'none' || transform === '' ? 'matrix(1, 0, 0, 1, 0, 0)' : transform;
  if (!_transform.match('matrix')) {
    return transformNoMatrix(transform);
  }
  var m = getMatrix(_transform);
  var m11 = m.m11;
  var m12 = m.m12;
  var m13 = m.m13;
  var m14 = m.m14;
  var m21 = m.m21;
  var m22 = m.m22;
  var m23 = m.m23;
  var m24 = m.m24;
  var m31 = m.m31;
  var m32 = m.m32;
  var m33 = m.m33;
  var m34 = m.m34;
  var m43 = m.m43;
  var t1 = void 0;
  var t2 = void 0;
  var t3 = void 0;
  var tm = {};
  var angle = Math.atan2(m23, m33);
  var skewX = Math.tan(m21);
  var skewY = Math.tan(m12);
  var cos = void 0;
  var sin = void 0;
  // rotateX
  tm.rotateX = toFixed(angle * RAD2DEG) || 0;
  if (angle) {
    cos = Math.cos(-angle);
    sin = Math.sin(-angle);
    t1 = m21 * cos + m31 * sin;
    t2 = m22 * cos + m32 * sin;
    t3 = m23 * cos + m33 * sin;
    m31 = m21 * -sin + m31 * cos;
    m32 = m22 * -sin + m32 * cos;
    m33 = m23 * -sin + m33 * cos;
    m34 = m24 * -sin + m34 * cos;
    m21 = t1;
    m22 = t2;
    m23 = t3;
  }
  // rotateY
  angle = Math.atan2(-m13, m33);
  tm.rotateY = toFixed(angle * RAD2DEG) || 0;
  if (angle) {
    cos = Math.cos(-angle);
    sin = Math.sin(-angle);
    t1 = m11 * cos - m31 * sin;
    t2 = m12 * cos - m32 * sin;
    t3 = m13 * cos - m33 * sin;
    m32 = m12 * sin + m32 * cos;
    m33 = m13 * sin + m33 * cos;
    m34 = m14 * sin + m34 * cos;
    m11 = t1;
    m12 = t2;
    m13 = t3;
  }
  // rotateZ
  angle = Math.atan2(m12, m11);
  tm.rotate = toFixed(angle * RAD2DEG) || 0;
  if (angle) {
    cos = Math.cos(angle);
    sin = Math.sin(angle);
    t1 = m11 * cos + m12 * sin;
    t2 = m21 * cos + m22 * sin;
    t3 = m31 * cos + m32 * sin;
    m12 = m12 * cos - m11 * sin;
    m22 = m22 * cos - m21 * sin;
    m32 = m32 * cos - m31 * sin;
    m11 = t1;
    m21 = t2;
    m31 = t3;
  }

  if (tm.rotateX && Math.abs(tm.rotateX) + Math.abs(tm.rotate) > 359.9) {
    tm.rotateX = tm.rotate = 0;
    tm.rotateY = 180 - tm.rotateY || 0;
  }

  tm.scaleX = toFixed(Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13));
  tm.scaleY = toFixed(Math.sqrt(m22 * m22 + m23 * m23));
  tm.scaleZ = toFixed(Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33));
  // 不管 skewX skewY了；
  tm.skewX = skewX === -skewY ? 0 : skewX;
  tm.skewY = skewY === -skewX ? 0 : skewY;
  tm.perspective = m34 ? 1 / (m34 < 0 ? -m34 : m34) : 0;
  tm.translateX = m.m41;
  tm.translateY = m.m42;
  tm.translateZ = m43;
  return tm;
}

function stylesToCss(key, value) {
  var _value = void 0;
  if (!isUnitlessNumber[key] && typeof value === 'number') {
    _value = ' ' + value + 'px';
  } else if (key === 'content' && !unquotedContentValueRegex.test(value)) {
    _value = '\'' + value.replace(/'/g, "\\'") + '\'';
  }
  return _value || value;
}

function getUnit(p, v) {
  var currentUnit = v && v.toString().replace(/[^a-z|%]/ig, '');
  var unit = '';
  if (p.indexOf('translate') >= 0 || p.indexOf('perspective') >= 0 || p.indexOf('blur') >= 0) {
    unit = 'px';
  } else if (p.indexOf('skew') >= 0 || p.indexOf('rotate') >= 0) {
    unit = 'deg';
  }
  return currentUnit || unit;
}

function getValues(p, d, u) {
  return p + '(' + d + (u || '') + ')';
}

function findStyleByName(cssArray, name) {
  var ret = null;
  if (cssArray) {
    cssArray.forEach(function (_cname) {
      if (ret) {
        return;
      }
      var cName = _cname.split('(')[0];
      var a = cName in cssList.transformGroup && name.substring(0, name.length - 1).indexOf(cName) >= 0;
      var b = name in cssList.transformGroup && cName.substring(0, cName.length - 1).indexOf(name) >= 0;
      var c = cName in cssList.transformGroup && name in cssList.transformGroup && (cName.substring(0, cName.length - 2) === name || name.substring(0, name.length - 2) === cName);
      if (cName === name || a || b || c) {
        ret = _cname;
      }
    });
  }
  return ret;
}

function mergeStyle(current, change) {
  if (!current || current === '') {
    return change;
  }
  if (!change || change === '') {
    return current;
  }
  var _current = current.replace(/\s/g, '').split(')').filter(function (item) {
    return item !== '' && item;
  }).map(function (item) {
    return item + ')';
  });
  var _change = change.replace(/\s/g, '').split(')').filter(function (item) {
    return item !== '' && item;
  });
  _change.forEach(function (changeOnly) {
    var changeArr = changeOnly.split('(');
    var changeName = changeArr[0];
    var currentSame = findStyleByName(_current, changeName);
    if (!currentSame) {
      _current.push(changeOnly + ')');
    } else {
      var index = _current.indexOf(currentSame);
      _current[index] = changeOnly + ')';
    }
  });
  _current.forEach(function (item, i) {
    if (item.indexOf('perspective') >= 0 && i) {
      _current.splice(i, 1);
      _current.unshift(item);
    }
  });
  return _current.join(' ').trim();
}


/***/ }),

/***/ 41000:
/***/ (function(module) {

"use strict";


// t: current time, b: beginning value, _c: final value, d: total duration
var tweenFunctions = {
  linear: function(t, b, _c, d) {
    var c = _c - b;
    return c * t / d + b;
  },
  easeInQuad: function(t, b, _c, d) {
    var c = _c - b;
    return c * (t /= d) * t + b;
  },
  easeOutQuad: function(t, b, _c, d) {
    var c = _c - b;
    return -c * (t /= d) * (t - 2) + b;
  },
  easeInOutQuad: function(t, b, _c, d) {
    var c = _c - b;
    if ((t /= d / 2) < 1) {
      return c / 2 * t * t + b;
    } else {
      return -c / 2 * ((--t) * (t - 2) - 1) + b;
    }
  },
  easeInCubic: function(t, b, _c, d) {
    var c = _c - b;
    return c * (t /= d) * t * t + b;
  },
  easeOutCubic: function(t, b, _c, d) {
    var c = _c - b;
    return c * ((t = t / d - 1) * t * t + 1) + b;
  },
  easeInOutCubic: function(t, b, _c, d) {
    var c = _c - b;
    if ((t /= d / 2) < 1) {
      return c / 2 * t * t * t + b;
    } else {
      return c / 2 * ((t -= 2) * t * t + 2) + b;
    }
  },
  easeInQuart: function(t, b, _c, d) {
    var c = _c - b;
    return c * (t /= d) * t * t * t + b;
  },
  easeOutQuart: function(t, b, _c, d) {
    var c = _c - b;
    return -c * ((t = t / d - 1) * t * t * t - 1) + b;
  },
  easeInOutQuart: function(t, b, _c, d) {
    var c = _c - b;
    if ((t /= d / 2) < 1) {
      return c / 2 * t * t * t * t + b;
    } else {
      return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
    }
  },
  easeInQuint: function(t, b, _c, d) {
    var c = _c - b;
    return c * (t /= d) * t * t * t * t + b;
  },
  easeOutQuint: function(t, b, _c, d) {
    var c = _c - b;
    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;
  },
  easeInOutQuint: function(t, b, _c, d) {
    var c = _c - b;
    if ((t /= d / 2) < 1) {
      return c / 2 * t * t * t * t * t + b;
    } else {
      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
    }
  },
  easeInSine: function(t, b, _c, d) {
    var c = _c - b;
    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
  },
  easeOutSine: function(t, b, _c, d) {
    var c = _c - b;
    return c * Math.sin(t / d * (Math.PI / 2)) + b;
  },
  easeInOutSine: function(t, b, _c, d) {
    var c = _c - b;
    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
  },
  easeInExpo: function(t, b, _c, d) {
    var c = _c - b;
    return (t==0) ? b : c * Math.pow(2, 10 * (t/d - 1)) + b;
  },
  easeOutExpo: function(t, b, _c, d) {
    var c = _c - b;
    return (t==d) ? b+c : c * (-Math.pow(2, -10 * t/d) + 1) + b;
  },
  easeInOutExpo: function(t, b, _c, d) {
    var c = _c - b;
    if (t === 0) {
      return b;
    }
    if (t === d) {
      return b + c;
    }
    if ((t /= d / 2) < 1) {
      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;
    } else {
      return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;
    }
  },
  easeInCirc: function(t, b, _c, d) {
    var c = _c - b;
    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;
  },
  easeOutCirc: function(t, b, _c, d) {
    var c = _c - b;
    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;
  },
  easeInOutCirc: function(t, b, _c, d) {
    var c = _c - b;
    if ((t /= d / 2) < 1) {
      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;
    } else {
      return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;
    }
  },
  easeInElastic: function(t, b, _c, d) {
    var c = _c - b;
    var a, p, s;
    s = 1.70158;
    p = 0;
    a = c;
    if (t === 0) {
      return b;
    } else if ((t /= d) === 1) {
      return b + c;
    }
    if (!p) {
      p = d * 0.3;
    }
    if (a < Math.abs(c)) {
      a = c;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(c / a);
    }
    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
  },
  easeOutElastic: function(t, b, _c, d) {
    var c = _c - b;
    var a, p, s;
    s = 1.70158;
    p = 0;
    a = c;
    if (t === 0) {
      return b;
    } else if ((t /= d) === 1) {
      return b + c;
    }
    if (!p) {
      p = d * 0.3;
    }
    if (a < Math.abs(c)) {
      a = c;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(c / a);
    }
    return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;
  },
  easeInOutElastic: function(t, b, _c, d) {
    var c = _c - b;
    var a, p, s;
    s = 1.70158;
    p = 0;
    a = c;
    if (t === 0) {
      return b;
    } else if ((t /= d / 2) === 2) {
      return b + c;
    }
    if (!p) {
      p = d * (0.3 * 1.5);
    }
    if (a < Math.abs(c)) {
      a = c;
      s = p / 4;
    } else {
      s = p / (2 * Math.PI) * Math.asin(c / a);
    }
    if (t < 1) {
      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
    } else {
      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;
    }
  },
  easeInBack: function(t, b, _c, d, s) {
    var c = _c - b;
    if (s === void 0) {
      s = 1.70158;
    }
    return c * (t /= d) * t * ((s + 1) * t - s) + b;
  },
  easeOutBack: function(t, b, _c, d, s) {
    var c = _c - b;
    if (s === void 0) {
      s = 1.70158;
    }
    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;
  },
  easeInOutBack: function(t, b, _c, d, s) {
    var c = _c - b;
    if (s === void 0) {
      s = 1.70158;
    }
    if ((t /= d / 2) < 1) {
      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;
    } else {
      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;
    }
  },
  easeInBounce: function(t, b, _c, d) {
    var c = _c - b;
    var v;
    v = tweenFunctions.easeOutBounce(d - t, 0, c, d);
    return c - v + b;
  },
  easeOutBounce: function(t, b, _c, d) {
    var c = _c - b;
    if ((t /= d) < 1 / 2.75) {
      return c * (7.5625 * t * t) + b;
    } else if (t < 2 / 2.75) {
      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;
    } else if (t < 2.5 / 2.75) {
      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;
    } else {
      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;
    }
  },
  easeInOutBounce: function(t, b, _c, d) {
    var c = _c - b;
    var v;
    if (t < d / 2) {
      v = tweenFunctions.easeInBounce(t * 2, 0, c, d);
      return v * 0.5 + b;
    } else {
      v = tweenFunctions.easeOutBounce(t * 2 - d, 0, c, d);
      return v * 0.5 + c * 0.5 + b;
    }
  }
};

module.exports = tweenFunctions;


/***/ }),

/***/ 69187:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var tween_functions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41000);
/* harmony import */ var tween_functions__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tween_functions__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29822);



(tween_functions__WEBPACK_IMPORTED_MODULE_0___default().path) = function (_path, _param) {
  var param = _param || {};

  if (_utils__WEBPACK_IMPORTED_MODULE_1__/* .windowIsUndefined */ .Q6) {
    return 'linear';
  }

  var pathNode = (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .parsePath */ .cP)(_path);
  var pathLength = pathNode.getTotalLength();
  var rect = param.rect || 100; // path 的大小，100 * 100，

  var lengthPixel = param.lengthPixel || 200; // 线上取点像素，默认分为 200 段。。

  var points = [];

  for (var i = 0; i < lengthPixel - 1; i++) {
    points.push(pathNode.getPointAtLength(pathLength / (lengthPixel - 1) * i));
  }

  points.push(pathNode.getPointAtLength(lengthPixel));
  return function path(t, b, _c, d) {
    var p = tween_functions__WEBPACK_IMPORTED_MODULE_0___default().linear(t, b, _c, d);
    var timePointX = rect * p; // X 轴的百分比;
    // 取出 x 轴百分比上的点;

    var point = points.filter(function (item) {
      return item.x >= timePointX;
    })[0] || pathNode.getPointAtLength(p * pathLength);
    return 1 - point.y / rect;
  };
};

/* harmony default export */ __webpack_exports__["Z"] = ((tween_functions__WEBPACK_IMPORTED_MODULE_0___default()));

/***/ }),

/***/ 85879:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Ticker */
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15671);
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(43144);
/* harmony import */ var raf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(54087);
/* harmony import */ var raf__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(raf__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(29822);





var Ticker = /*#__PURE__*/function () {
  function Ticker() {
    var _this = this;

    (0,_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(this, Ticker);

    this.lagThreshold = 150;
    this.adjustedLag = 33;
    this.emptyTime = 0;
    this.elapsed = 0;
    this.frameFPS = 1000 / 240;
    this.startTime = 0;
    this.prevTime = 0;
    this.useTimeout = false;
    this.lastUpdate = this.startTime;
    this.nextTime = this.frameFPS;
    this.req = void 0;
    this.id = -1;
    this.tweenId = 0;
    this.tickFn = [];
    this.state = 'sleep';
    this.time = 0;
    this.frame = 0;

    this.removeReq = function (id) {
      return _this.useTimeout ? clearTimeout(id) : (0,raf__WEBPACK_IMPORTED_MODULE_0__.cancel)(id);
    };

    this.tick = function () {
      var tickFn = _this.tickFn;

      if (!_this.startTime) {
        _this.startTime = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .getTime */ .hK)() - _this.frameFPS;
        _this.lastUpdate = _this.startTime;
      }

      _this.elapsed = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .getTime */ .hK)() - _this.lastUpdate;

      if (_this.elapsed > _this.lagThreshold) {
        _this.startTime += _this.elapsed - _this.adjustedLag;
      }

      _this.lastUpdate += _this.elapsed;
      _this.time = _this.lastUpdate - _this.startTime;
      var overlap = _this.time - _this.nextTime;

      if (overlap > 0) {
        _this.frame++;
        _this.nextTime += overlap + (overlap >= _this.frameFPS ? 4 : _this.frameFPS - overlap);
        var f = _this.time - _this.prevTime;

        for (var i = 0; i < tickFn.length; i++) {
          tickFn[i].fn({
            time: _this.time,
            elapsed: f < _this.frameFPS ? _this.frameFPS : f
          });
        }
        /* this.tickFn = this.tickFn.filter(item => {
          if (!item.kill) {
            item.fn({ time: this.time, elapsed: this.elapsed });
            return item;
          }
          return false;
        }); */


        _this.prevTime = _this.time;
      }

      if (!_this.tickFn.length) {
        if (!_this.emptyTime) {
          _this.emptyTime = _this.time + 500; // 延时关掉, 用阔值避免跳帧。
        }

        if (_this.time >= _this.emptyTime) {
          _this.emptyTime = 0;

          _this.sleep();

          return;
        }
      }

      if (_this.req) {
        _this.id = _this.req(_this.tick);
      }
    };

    this.wake = function () {
      if (_this.id) {
        _this.sleep();
      }

      _this.req = _this.useTimeout ? function (f) {
        return setTimeout(f, _this.frameFPS);
      } : (raf__WEBPACK_IMPORTED_MODULE_0___default());

      _this.tick();

      _this.state = 'wake';
    };

    this.sleep = function () {
      _this.removeReq(_this.id);

      _this.id = -1;
      _this.req = undefined;
      _this.state = 'sleep';
    };

    this.add = function (fn) {
      var key = "TweenOneTicker_".concat(_this.tweenId);
      _this.tweenId += 1;

      if (_this.tickFn.findIndex(function (c) {
        return c.key === key;
      }) === -1) {
        _this.tickFn.push({
          key: key,
          fn: fn
        });
      }

      _this.emptyTime = 0;

      if (!_this.req) {
        // setTimeout(this.wake);
        _this.wake();
      }

      return key;
    };

    this.clear = function (f) {
      // f: key || fn

      /* const t = Date.now()
      const i = this.tickFn.findIndex((c: any) => c.key === f || c.fn === f);
      // console.log(i);
      if (i !== -1) {
        this.tickFn.splice(i, 1);
      } */
      //const { tickFn } = this;
      // console.log('clear')

      /* for (let i = 0; i < this.tickFn.length; i++) {
         const c = this.tickFn[i];
        if (c.fn == f || c.key === f) {
          c.kill = true;
        }
      }*/
      _this.tickFn = _this.tickFn.filter(function (c) {
        return c.key !== f && c.fn !== f;
      });
    };

    this.timeout = function (fn, time) {
      if (!(typeof fn === 'function')) {
        return console.warn('not function'); // eslint-disable-line
      }

      var startTime = _this.time;

      var timeoutID = _this.add(function () {
        var moment = _this.time - startTime;

        if (moment >= (time || 0)) {
          _this.clear(timeoutID);

          fn();
        }
      });

      return timeoutID;
    };

    this.interval = function (fn, time) {
      if (!(typeof fn === 'function')) {
        console.warn('not function'); // eslint-disable-line

        return null;
      }

      var starTime = _this.time;
      return _this.add(function () {
        var moment = _this.time - starTime;

        if (moment >= (time || 0)) {
          starTime = _this.time;
          fn();
        }
      });
    };
  }

  (0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(Ticker, [{
    key: "fps",
    value: function fps(_fps, useTimeout) {
      this.frameFPS = 1000 / (_fps || 240); // 240 赫磁率, 不再用 60；

      this.nextTime = this.time + this.frameFPS;
      this.useTimeout = typeof useTimeout === 'undefined' ? this.useTimeout : useTimeout;

      if (this.useTimeout) {
        this.req = function (f) {
          return setTimeout(f, _fps);
        };
      }
    }
  }]);

  return Ticker;
}();

var ticker = new Ticker();
/* harmony default export */ __webpack_exports__["Z"] = (ticker);


/***/ }),

/***/ 24923:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ZP": function() { return /* binding */ es; }
});

// UNUSED EXPORTS: ArrayPlugin, Easing, GradientsPlugin, PathMotionPlugin, Plugins, StylePlugin, SvgDrawPlugin, SvgMorphPlugin, Ticker, Tween, globalTimeline

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js
var esm_typeof = __webpack_require__(71002);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(64687);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(15861);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__(15671);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(43144);
// EXTERNAL MODULE: ./node_modules/tween-one/es/plugins/index.js
var plugins = __webpack_require__(31529);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js
var objectSpread2 = __webpack_require__(1413);
// EXTERNAL MODULE: ./node_modules/style-utils/main.js
var main = __webpack_require__(52191);
// EXTERNAL MODULE: ./node_modules/tween-one/es/utils.js
var utils = __webpack_require__(29822);
;// CONCATENATED MODULE: ./node_modules/tween-one/es/plugins/StylePlugin.js







var unitReg = /%|vw|vh|em|rem/i;

var style = /*#__PURE__*/(0,createClass/* default */.Z)( //CSSStyleDeclaration;
function style(_props) {
  var _this = this;

  (0,classCallCheck/* default */.Z)(this, style);

  this.props = void 0;
  this.computedStyle = void 0;
  this.root = void 0;
  this.index = void 0;
  this.targetIndex = void 0;
  this.tweenVars = {};
  this.transformName = void 0;
  this.filterName = void 0;
  this.target = void 0;
  this.start = {};
  this.startAt = {};
  this.propsData = {
    data: {},
    type: {},
    unit: {},
    count: {},
    splitStr: {},
    isTransform: {}
  };

  this.setDefaultData = function () {
    var props = _this.props;

    for (var k in props) {
      // Object.keys(props).forEach((k: string) => {
      var value = props[k];
      var isArray = value.split && value.split(/\s+|,/).length > 1 || k.match(/color|fill|stroke/i) || k.match(/shadow/i);
      var isGradients = (k === 'background' || k === 'backgroundImage') && value.match(/[a-z|-]+\(([\s\S]*?)\)/gi);

      if (isGradients) {
        _this.propsData.data[k] = {
          value: value,
          plugin: plugins/* default.GradientsPlugin */.Z.GradientsPlugin
        };
        continue;
      }

      if (isArray) {
        _this.propsData.data[k] = {
          value: value,
          plugin: plugins/* default.ArrayPlugin */.Z.ArrayPlugin
        };
        continue;
      }

      var key = (0,main/* getGsapType */.Lo)(k);

      var data = _this.getTweenData(key, props[k]);

      _this.propsData.data[key] = data.data[key];
      _this.propsData.type[key] = data.type[key];
      _this.propsData.unit[key] = data.unit[key];
      _this.propsData.count[key] = data.count[key];
      _this.propsData.isTransform[key] = (0,main/* isConvert */.dt)(key) === 'transform';

      if (data.splitStr[key]) {
        _this.propsData.splitStr[key] = data.splitStr[key];
      } //});

    }
  };

  this.getTweenData = function (key, v) {
    var data = {
      data: {},
      isTransform: {},
      type: {},
      unit: {},
      count: {},
      splitStr: {}
    };
    var value = v;
    data.data[key] = value; // data.type[key] = 'other';

    var dataIsString = typeof data.data[key] === 'string';
    data.unit[key] = dataIsString ? data.data[key].replace(/[^a-z|%]/g, '') : '';
    data.count[key] = dataIsString ? data.data[key].replace(/[^+|=|-]/g, '') : '';
    var d = dataIsString ? parseFloat(data.data[key].replace(/[a-z|%|=]/g, '')) : data.data[key];
    data.data[key] = !d && d !== 0 ? data.data[key] : d;
    return data;
  };

  this.setStartAtValue = function (start, startAt) {
    return (0,esm_typeof/* default */.Z)(startAt) === 'object' ? (0,utils/* getStartAtValue */.kp)(start, startAt) : start;
  };

  this.getAnimStart = function () {
    var target = _this.target,
        root = _this.root,
        targetIndex = _this.targetIndex,
        propsData = _this.propsData,
        s = _this.startAt,
        start = _this.start,
        tweenVars = _this.tweenVars;
    var startAt = {};

    for (var c in s) {
      //Object.keys(s).forEach(c => {
      startAt[(0,main/* getGsapType */.Lo)(c)] = s[c]; //});
    }

    _this.computedStyle = _this.computedStyle || (0,utils/* getComputedStyle */.Dx)(target);
    tweenVars.style = tweenVars.style || {};
    var transform;
    var filter;

    for (var key in propsData.data) {
      var _startAt$key;

      var item = propsData.data[key];

      if (item.plugin) {
        var plugin = new item.plugin(item.value, key);
        plugin.target = target;
        plugin.root = root;
        plugin.parent = parent;
        plugin.index = _this.index;
        plugin.targetIndex = targetIndex;
        plugin.tweenVars = tweenVars;
        plugin.startAt = _this.startAt;
        plugin.computedStyle = _this.computedStyle;
        item.plugin = plugin;
        start[key] = plugin.getAnimStart();
        continue;
      }

      var cssName = (0,main/* isConvert */.dt)(key);
      var styleKey = cssName === 'transform' ? _this.transformName : cssName;
      styleKey = cssName === 'filter' ? _this.filterName : styleKey;
      var varsValue = tweenVars.style[styleKey];
      var styleValue = varsValue !== null && varsValue !== void 0 ? varsValue : _this.computedStyle[cssName];
      var startData = (_startAt$key = startAt[key]) !== null && _startAt$key !== void 0 ? _startAt$key : styleValue;
      var endUnit = propsData.unit[key];
      var startUnit = '';

      if (cssName === 'transform') {
        transform = transform || (startData === varsValue ? (0,objectSpread2/* default */.Z)({}, varsValue) : (0,main/* getTransform */.Ck)(_this.computedStyle[_this.transformName]));
        var startValue = transform[key];

        if (startAt && key in startAt) {
          var _ref, _startAt$key$vars;

          startValue = _this.setStartAtValue((_ref = (_startAt$key$vars = startAt[key].vars) !== null && _startAt$key$vars !== void 0 ? _startAt$key$vars : varsValue === null || varsValue === void 0 ? void 0 : varsValue[key]) !== null && _ref !== void 0 ? _ref : startValue, startAt[key]);
          startUnit = startAt[key].unit;

          if (key === 'scale') {
            transform.scaleX = startValue;
            transform.scaleY = startValue;
          } else {
            transform[key] = startValue;
          }
        }

        if (startUnit !== endUnit) {
          startValue = (0,utils/* startConvertToEndUnit */.o7)({
            target: target,
            computedStyle: _this.computedStyle,
            style: cssName,
            value: startValue,
            startUnit: startUnit,
            endUnit: endUnit
          });

          if (key === 'scale') {
            transform.scaleX = startValue;
            transform.scaleY = startValue;
          } else {
            transform[key] = startValue;
          }
        }

        start[_this.transformName] = transform;
      } else if (cssName === 'filter') {
        var fKey = main/* cssList.filterConvert */._T.filterConvert[key] || key;
        filter = filter || (startData === varsValue ? (0,objectSpread2/* default */.Z)({}, varsValue) : (0,main/* splitFilterToObject */.GX)(styleValue) || {});
        filter[fKey] = filter[fKey] || utils/* initFilterValue */.eL[fKey];
        var _startValue = filter[fKey];

        if (startAt && key in startAt) {
          var _startAt$key$vars2;

          _startValue = _this.setStartAtValue((_startAt$key$vars2 = startAt[key].vars) !== null && _startAt$key$vars2 !== void 0 ? _startAt$key$vars2 : _startValue, startAt[key]);
          startUnit = startAt[key].unit;
          filter[fKey] = _startValue;
        }

        if (endUnit !== startUnit) {
          var _this$computedStyle;

          filter[fKey] = (0,utils/* startConvertToEndUnit */.o7)({
            target: target,
            computedStyle: _this.computedStyle,
            style: cssName,
            value: _startValue,
            startUnit: startUnit,
            endUnit: endUnit,
            fixed: ((_this$computedStyle = _this.computedStyle) === null || _this$computedStyle === void 0 ? void 0 : _this$computedStyle.position) === 'fixed'
          });
        }

        start[_this.filterName] = filter;
      } else {
        var _startAt$key2;

        startData = (_startAt$key2 = startAt[key]) !== null && _startAt$key2 !== void 0 ? _startAt$key2 : styleValue;

        if (!startData || startData === 'none' || startData === 'auto') {
          startData = '';
        } // 计算单位


        endUnit = propsData.unit[cssName];
        startUnit = (0,esm_typeof/* default */.Z)(startData) === 'object' ? startData.unit : "".concat(startData).replace(/[^a-z|%]/g, '');
        startData = _this.setStartAtValue(styleValue, startAt[key]);

        if (endUnit !== startUnit) {
          var _this$computedStyle2;

          startData = (0,utils/* startConvertToEndUnit */.o7)({
            target: target,
            computedStyle: _this.computedStyle,
            style: cssName,
            value: parseFloat(startData),
            startUnit: startUnit,
            endUnit: endUnit,
            fixed: ((_this$computedStyle2 = _this.computedStyle) === null || _this$computedStyle2 === void 0 ? void 0 : _this$computedStyle2.position) === 'fixed'
          });
        }

        start[cssName] = parseFloat(startData) || (0,utils/* getDefaultStart */.AG)(cssName);
      }
    }

    return start;
  };

  this.render = function (ratio) {
    var propsData = _this.propsData,
        start = _this.start,
        t = _this.tweenVars;
    var tweenVars = t.style || {};

    if (start[_this.transformName] && !tweenVars[_this.transformName]) {
      tweenVars[_this.transformName] = (0,objectSpread2/* default */.Z)({}, start[_this.transformName]);
    }

    if (start[_this.filterName] && !tweenVars[_this.filterName]) {
      tweenVars[_this.filterName] = (0,objectSpread2/* default */.Z)({}, start[_this.filterName]);
    }

    var transform = tweenVars[_this.transformName];
    var filter = tweenVars[_this.filterName];
    var data = propsData.data,
        dataUnit = propsData.unit,
        dataCount = propsData.count,
        isTransform = propsData.isTransform;

    for (var key in data) {
      //Object.keys(data).forEach((key: string) => {
      var endValue = data[key];

      if (endValue.plugin) {
        tweenVars[key] = endValue.plugin.render(ratio);
        continue;
      }

      var isT = isTransform[key];
      var startValue = isT ? start[_this.transformName][key] : start[key];
      var unit = dataUnit[key];
      var count = dataCount[key];

      if (isT) {
        if (key === 'scale') {
          var xStart = start[_this.transformName].scaleX;
          var yStart = start[_this.transformName].scaleY;

          if (count.charAt(1) === '=') {
            transform.scaleX = xStart + endValue * ratio;
            transform.scaleY = yStart + endValue * ratio;
          } else {
            transform.scaleX = (endValue - xStart) * ratio + xStart;
            transform.scaleY = (endValue - yStart) * ratio + yStart;
          }
        } else {
          transform[key] = (0,utils/* getValue */.NA)(parseFloat(startValue), endValue, ratio, count, unit);
        }

        transform.text = (0,utils/* getTransformValue */.q$)(tweenVars[_this.transformName]);
      } else if (main/* cssList.filter.indexOf */._T.filter.indexOf(key) >= 0) {
        var fKey = main/* cssList.filterConvert */._T.filterConvert[key] || key;
        startValue = parseFloat(start[_this.filterName][fKey]) || 0;
        filter[fKey] = (0,utils/* getValue */.NA)(startValue, endValue, ratio, count, unit);
        filter.text = ''; //Object.keys(filter).forEach(filterKey => {

        for (var filterKey in filter) {
          if (filterKey === 'text') {
            continue;
          }

          filter.text = "".concat(filter.text, " ").concat(filterKey, "(").concat(filter[filterKey], ")").trim();
        } //});

      } else {
        var styleUnit = (0,main/* stylesToCss */.YJ)(key, 0);
        styleUnit = typeof styleUnit === 'number' ? 0 : styleUnit.replace(/[^a-z|%]/g, '');
        unit = unit || styleUnit;

        if (typeof endValue === 'string') {
          tweenVars[key] = endValue;
        } else {
          tweenVars[key] = (0,utils/* getValue */.NA)(startValue, endValue, ratio, count, unit);
        }
      }
    }

    return tweenVars;
  };

  this.props = _props;
  this.transformName = (0,main/* checkStyleName */.Yf)('transform');
  this.filterName = (0,main/* checkStyleName */.Yf)('filter') || 'filter';
  this.setDefaultData();
});

style.key = 'style';
style.className = 'style';
/* harmony default export */ var StylePlugin = (style);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules
var toConsumableArray = __webpack_require__(74902);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(97326);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js
var inherits = __webpack_require__(60136);
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createSuper.js + 3 modules
var createSuper = __webpack_require__(73568);
;// CONCATENATED MODULE: ./node_modules/tween-one/es/plugins/PluginMixins.js



var PluginMixins = /*#__PURE__*/(0,createClass/* default */.Z)( // 转换成实际属性，__self 为平辅到子节点
function PluginMixins(value, key) {
  (0,classCallCheck/* default */.Z)(this, PluginMixins);

  this.value = void 0;
  this.key = void 0;
  this.root = void 0;
  this.index = void 0;
  this.style = {};
  this.start = {};
  this.startAt = {};
  this.target = void 0;
  this.value = value;
  this.key = key;
});

PluginMixins.className = void 0;
PluginMixins.key = void 0;

;// CONCATENATED MODULE: ./node_modules/tween-one/es/plugins/ArrayPlugin.js










var ArrayPlugin = /*#__PURE__*/function (_PluginMixins) {
  (0,inherits/* default */.Z)(ArrayPlugin, _PluginMixins);

  var _super = (0,createSuper/* default */.Z)(ArrayPlugin);

  function ArrayPlugin(_value, _key) {
    var _this;

    (0,classCallCheck/* default */.Z)(this, ArrayPlugin);

    _this = _super.call(this, _value, _key);
    _this.value = void 0;
    _this.key = void 0;
    _this.start = [];
    _this.tweenVars = {};
    _this.vars = {};
    _this.computedStyle = void 0;
    _this.propsData = {
      data: [],
      unit: [],
      count: []
    };

    _this.setDefaultData = function (type, splitStr) {
      var _assertThisInitialize = (0,assertThisInitialized/* default */.Z)(_this),
          propsData = _assertThisInitialize.propsData,
          value = _assertThisInitialize.value;

      var v = (0,toConsumableArray/* default */.Z)(value);

      if (type === 'color') {
        var _v$;

        v[3] = (_v$ = v[3]) !== null && _v$ !== void 0 ? _v$ : 1;
      }

      propsData.type = type;
      propsData.data = v.map(function (c) {
        return !parseFloat(c) && parseFloat(c) !== 0 ? c : parseFloat(c);
      });
      propsData.unit = v.map(function (c) {
        return c.toString().replace(/[^a-z|%]/g, '');
      });
      propsData.count = v.map(function (c) {
        return c.toString().replace(/[^+|=|-]/g, '');
      });

      if (splitStr) {
        propsData.splitStr = splitStr;
      }
    };

    _this.convertToMarksArray = function (unit, key, data, i) {
      var startUnit = (data || '').toString().replace(/[^a-z|%]/g, '');
      var endUnit = typeof i === 'number' ? unit[i] : undefined;

      if (startUnit === endUnit) {
        return parseFloat(data);
      } else if (!parseFloat(data) && parseFloat(data) !== 0) {
        return data;
      }

      return (0,utils/* startConvertToEndUnit */.o7)({
        target: _this.target,
        computedStyle: _this.computedStyle,
        style: key,
        value: data,
        startUnit: startUnit,
        endUnit: endUnit,
        isOriginWidth: key === 'transformOrigin' && !i
      });
    };

    _this.getAnimStart = function () {
      var _ref, _ref2, _startAt$key, _tweenVars$style;

      var _assertThisInitialize2 = (0,assertThisInitialized/* default */.Z)(_this),
          startAt = _assertThisInitialize2.startAt,
          target = _assertThisInitialize2.target,
          key = _assertThisInitialize2.key,
          propsData = _assertThisInitialize2.propsData,
          computedStyle = _assertThisInitialize2.computedStyle,
          tweenVars = _assertThisInitialize2.tweenVars;

      var startValue = (_ref = (_ref2 = (_startAt$key = startAt === null || startAt === void 0 ? void 0 : startAt[key]) !== null && _startAt$key !== void 0 ? _startAt$key : computedStyle ? (_tweenVars$style = tweenVars.style) === null || _tweenVars$style === void 0 ? void 0 : _tweenVars$style[key] : tweenVars[key]) !== null && _ref2 !== void 0 ? _ref2 : (computedStyle || target)[key]) !== null && _ref !== void 0 ? _ref : '';
      var inset = propsData.data.indexOf('inset');
      var oldShadow;

      if (inset !== -1 && !startValue.match('inset') && propsData.type === 'shadow') {
        oldShadow = startValue;
        startValue = '';
      }

      if (!startValue || startValue === 'none' || startValue === 'auto') {
        startValue = '';
      }

      startValue = propsData.type === 'shadow' ? (0,main/* parseShadow */.hy)(startValue, key) : startValue;
      startValue = propsData.type === 'color' ? (0,main/* parseColor */.lu)(startValue) : startValue;
      startValue = propsData.type === 'string' ? startValue.split(/[\s|,]/) : startValue;

      if (utils/* styleValueToArray */.Fi[key]) {
        var _startValue$, _startValue$2, _ref3, _startValue$3;

        startValue[1] = (_startValue$ = startValue[1]) !== null && _startValue$ !== void 0 ? _startValue$ : startValue[0];
        startValue[2] = (_startValue$2 = startValue[2]) !== null && _startValue$2 !== void 0 ? _startValue$2 : startValue[0];
        startValue[3] = (_ref3 = (_startValue$3 = startValue[3]) !== null && _startValue$3 !== void 0 ? _startValue$3 : startValue[1]) !== null && _ref3 !== void 0 ? _ref3 : startValue[0];
      }

      var endUnit = propsData.unit;
      var startData = startValue.map(function (c, i) {
        if (parseFloat(c).toString() === 'NaN') {
          return c;
        }

        return _this.convertToMarksArray(endUnit, key, c, i);
      });
      _this.start = startData.concat(inset >= 0 ? 'inset' : []);
      _this.start.oldShadow = oldShadow;
      return _this.start;
    };

    _this.render = function (ratio) {
      var _assertThisInitialize3 = (0,assertThisInitialized/* default */.Z)(_this),
          start = _assertThisInitialize3.start,
          propsData = _assertThisInitialize3.propsData;

      var type = propsData.type,
          splitStr = propsData.splitStr,
          data = propsData.data,
          count = propsData.count,
          unit = propsData.unit;
      var ratioData = data.map(function (c, i) {
        return typeof c === 'string' ? c : (0,utils/* getValue */.NA)(start[i], c, ratio, count[i], unit[i]);
      });

      switch (type) {
        case 'string':
          ratioData = ratioData.join(splitStr);
          break;

        case 'color':
          ratioData = (0,main/* getColor */.Lq)(ratioData);
          break;

        case 'shadow':
          {
            var endInset = ratioData.indexOf('inset') >= 0;
            var r = endInset ? ratioData.filter(function (c) {
              return c !== 'inset';
            }) : ratioData;
            var s = r.slice(0, r.length - 4).map(function (a) {
              if (typeof a === 'number') {
                return "".concat(a, "px");
              }

              return a;
            });
            var c = (0,main/* getColor */.Lq)(r.slice(r.length - 4, r.length));
            ratioData = "".concat(start.oldShadow ? "".concat(start.oldShadow, ",") : '').concat(s.join(' '), " ").concat(c, " ").concat(endInset ? 'inset' : '').trim();
            break;
          }

        default:
          break;
      }

      return ratioData;
    };

    _this.value = _value;
    _this.key = _key;
    var _type = '';
    var _splitStr = '';

    if (typeof _value === 'string') {
      if (_key.match(utils/* shadowExp */.gU)) {
        _this.value = (0,main/* parseShadow */.hy)(_value, _key);
        _type = 'shadow';
      } else if (_key.match(/color|fill|stroke/i) || _value.match(utils/* colorRegExp */.rV)) {
        _this.value = (0,main/* parseColor */.lu)(_value);
        _type = 'color';
      } else {
        _splitStr = _value.replace(/[^\s|,]/g, '').replace(/\s+/g, ' ');
        _this.value = _value.split(/[\s|,]/);
        _type = 'string';
      }
    }

    _this.setDefaultData(_type, _splitStr);

    return _this;
  }

  return (0,createClass/* default */.Z)(ArrayPlugin);
}(PluginMixins);

ArrayPlugin.className = 'ArrayPlugin';
/* harmony default export */ var plugins_ArrayPlugin = (ArrayPlugin);
;// CONCATENATED MODULE: ./node_modules/tween-one/es/plugins/GradientsPlugin.js










var angleData = {
  linear: {
    'to top': '0deg',
    'to top right': '45deg',
    'to right top': '45deg',
    'to right': '90deg',
    'to right bottom': '135deg',
    'to bottom right': '135deg',
    'to bottom': '180deg',
    'to bottom left': '225deg',
    'to left bottom': '225deg',
    'to left': '270deg',
    'to left top': '315deg',
    'to top left': '315deg'
  },
  radial: {
    center: '50% 50%',
    top: '50% 0%',
    'top right': '100% 0%',
    'right top': '100% 0%',
    right: '100% 50%',
    'right bottom': '100% 100%',
    'bottom right': '100% 100%',
    bottom: '50% 100%',
    'bottom left': '0% 100%',
    'left bottom': '0% 100%',
    left: '0% 50%',
    'left top': '0% 0%',
    'top left': '0% 0%'
  }
};
var extentKeyWord = ['closest-side', 'closest-corner', 'farthest-side', 'farthest-corner'];

var consoleWarn = function consoleWarn(key, start, to) {
  console.warn("Warning: The gradient ".concat(key, "(").concat(start, " => ").concat(to, ") is different, which has been automatically converted to animation gradient ").concat(key, "(").concat(to, ")."));
}; // background-image functions: https://developer.mozilla.org/en-US/docs/Web/CSS/background-image


var noGradient = function noGradient(type) {
  return type === 'url' || type.indexOf('image') >= 0 || type === 'paint' || type === 'cross-fade' || type === 'element';
};

var GradientsPlugin = /*#__PURE__*/function (_PluginMixins) {
  (0,inherits/* default */.Z)(GradientsPlugin, _PluginMixins);

  var _super = (0,createSuper/* default */.Z)(GradientsPlugin);

  function GradientsPlugin(_value) {
    var _this;

    (0,classCallCheck/* default */.Z)(this, GradientsPlugin);

    _this = _super.call(this, _value, 'backgroundImage');
    _this.value = void 0;
    _this.tweenVars = {};
    _this.vars = [];
    _this.computedStyle = void 0;
    _this.defaultStartVars = [];

    _this.getPosition = function (data) {
      return data.map(function (t) {
        return {
          data: parseFloat(t),
          unit: t.replace(/[^a-z|%]/g, '')
        };
      });
    };

    _this.getAngle = function (type, $angle) {
      var t = type.replace(/-|gradient|repeating]/g, '');
      var extent;
      var shape;
      var angle;
      var position;

      switch (t) {
        case 'linear':
          {
            angle = _this.getPosition((angleData.linear[$angle] || $angle || angleData.linear['to bottom']).split(' '));
            break;
          }

        case 'radial':
          {
            var angleSplit = $angle.split(' ');
            extent = angleSplit.find(function (s) {
              return extentKeyWord.indexOf(s) >= 0;
            }) || extentKeyWord[3];
            shape = angleSplit.find(function (s) {
              return s === 'circle' || s === 'ellipse';
            }) || 'ellipse';
            var req = new RegExp("".concat(extent, "|").concat(shape, "|at"), 'g');
            var p = $angle.replace(req, '').trim();
            position = _this.getPosition((angleData.radial[p] || p || angleData.radial.center).split(' '));
            break;
          }

        case 'conic':
          {
            var _angleSplit = $angle.split('at').map(function (c) {
              return c.trim();
            });

            var n = (_angleSplit[0] || '').split(' ');
            shape = n[0] || 'from';
            angle = _this.getPosition([n[1] || '0deg']);
            position = _this.getPosition((angleData.radial[_angleSplit[1]] || _angleSplit[1] || angleData.radial.center).split(' '));
            break;
          }

        default:
          break;
      }

      return {
        extent: extent,
        shape: shape,
        angle: angle,
        position: position
      };
    };

    _this.valueToIValue = function (value) {
      if (!value) {
        return [];
      }

      var v = value.replace(/\),\s+?(url|radial|conic|linear|repeating|image|element|cross|paint)/, ')#,#$1').split('#,#'); //.match(/[a-z|-]+\(([\s\S]*?)\)/gi) || [];

      return v.map(function (str) {
        var type = str.replace(/([a-z|-]+)\((.*)\)/, '$1').trim();

        if (type === 'url') {
          return {
            type: type,
            values: str
          };
        }

        var data = str.replace(/([a-z|-]+)\((.*)\)/, '$2').replace(/#([0-9a-f]{6}|[0-9a-f]{3})|(rgb[a]?|hsl)+\(\d+\,[\s+]?\d+[\%]?\,[\s+]?\d+[\%]?(\,\d+)?\)/gi, function (e) {
          return e.replace(/\s+/g, '');
        }).replace(/\,([a-z|#|\s+])/g, '#,#$1').split('#,#').map(function (str) {
          return str.trim();
        });
        var a = data[0].match(utils/* colorRegExp */.rV) ? '' : data[0];

        if (a) {
          data.splice(0, 1);
        }

        var angle = _this.getAngle(type, a);

        var values = data.map(function (s) {
          var colorAndPos = s.trim().split(/\s+/);
          var color;
          var t = colorAndPos[0].match(utils/* colorRegExp */.rV) ? colorAndPos[0] : colorAndPos[0];

          if (t) {
            colorAndPos.splice(0, 1);
            color = (0,main/* parseColor */.lu)(t);
          }

          return {
            color: color,
            positions: colorAndPos.map(function (s) {
              return {
                data: parseFloat(s),
                unit: s.toString().replace(/[^a-z|%]/g, '')
              };
            })
          };
        });
        return {
          type: type,
          angle: angle,
          values: values
        };
      });
    };

    _this.getAnimStart = function () {
      var _tweenVars$key;

      var _assertThisInitialize = (0,assertThisInitialized/* default */.Z)(_this),
          s = _assertThisInitialize.startAt,
          key = _assertThisInitialize.key,
          computedStyle = _assertThisInitialize.computedStyle,
          target = _assertThisInitialize.target,
          vars = _assertThisInitialize.vars,
          tweenVars = _assertThisInitialize.tweenVars;

      var startAt = (0,objectSpread2/* default */.Z)({}, s);

      var v = (_tweenVars$key = tweenVars[key]) !== null && _tweenVars$key !== void 0 ? _tweenVars$key : (computedStyle || target)[key];

      if (!v || v === 'none' || v === 'auto') {
        v = '';
      }

      if (!startAt[key]) {
        startAt[key] = v ? _this.valueToIValue(v) : _this.defaultStartVars;
      }

      var maxVarsLength = Math.max(vars.length, startAt[key].length);
      var startData = (maxVarsLength === startAt[key].length ? startAt[key] : vars).map(function (_, i) {
        var _item$angle, _start$angle;

        var start = startAt[key][i] || _this.defaultStartVars[i];
        var item = vars[i] || start;

        if (!start || start.type !== item.type) {
          if (start.type !== item.type) {
            consoleWarn('type', start.type, item.type);
          }

          start = _this.defaultStartVars[i];
        }

        if (noGradient(item.type) || typeof item.values === 'string' || typeof start.values === 'string') {
          return (0,objectSpread2/* default */.Z)({}, item);
        }

        if (((_item$angle = item.angle) === null || _item$angle === void 0 ? void 0 : _item$angle.extent) !== ((_start$angle = start.angle) === null || _start$angle === void 0 ? void 0 : _start$angle.extent)) {
          var _start$angle2, _item$angle2;

          consoleWarn('extent keyword', (_start$angle2 = start.angle) === null || _start$angle2 === void 0 ? void 0 : _start$angle2.extent, (_item$angle2 = item.angle) === null || _item$angle2 === void 0 ? void 0 : _item$angle2.extent);
        }

        var maxLength = Math.max(start.values.length, item.values.length);
        var values = maxLength === start.values.length ? start.values : item.values;
        start.values = values.map(function (_, j) {
          var sValue = start.values[j];
          var aItem = item.values[j] || sValue;
          return (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, sValue), {}, {
            positions: (aItem || sValue).positions.map(function ($bItem, jj) {
              var sPos = sValue ? sValue.positions[jj] || sValue.positions[sValue.positions.length - 1] : aItem.positions[aItem.positions.length - 1];
              var bItem = $bItem || sPos;

              if (!sPos && sValue && start.values.length) {
                sPos = {
                  data: 100 / (start.values.length - 1) * j,
                  unit: '%'
                };
              }

              if (bItem.unit !== sPos.unit) {
                consoleWarn('units', sPos.unit, bItem.unit);
              }

              return {
                data: sPos.data,
                unit: bItem.unit
              };
            })
          });
        });
        return start;
      });
      _this.start = startData;
      return _this.start;
    };

    _this.render = function (ratio) {
      var value = '';
      var maxVarsLength = Math.max(_this.vars.length, _this.start.length);
      (maxVarsLength === _this.vars.length ? _this.vars : _this.start).forEach(function (_, i) {
        var start = _this.start[i];
        var item = _this.vars[i] || start;

        if (noGradient(item.type) || typeof item.values === 'string' || !item.angle) {
          value += "".concat(value ? ',' : '', " ").concat(item.values).trim();
          return;
        }

        var maxLength = Math.max(start.values.length, item.values.length);
        var values = (maxLength === start.values.length ? start.values : item.values).map(function (_, i) {
          var startItem = start.values[i];
          var cItem = item.values[i];

          if (!cItem) {
            cItem = startItem;
          }

          var startColor = startItem.color;
          var startPos = startItem.positions;

          if (!startColor && cItem.color) {
            startColor = (0,toConsumableArray/* default */.Z)(cItem.color); // startColor[3] = 0;
          }

          if (!startPos) {
            startPos = cItem.positions.map(function (c) {
              return (0,objectSpread2/* default */.Z)({}, c);
            });
          }

          var color = cItem.color ? cItem.color.map(function (n, j) {
            return (0,utils/* getValue */.NA)(startColor[j], n, ratio);
          }) : cItem.color;
          var positions = cItem.positions.map(function (n, j) {
            return "".concat((0,utils/* getValue */.NA)(startPos[j].data, n.data, ratio)).concat(n.unit);
          }).join(' ');
          return "".concat(color ? (0,main/* getColor */.Lq)(color) : color || '', " ").concat(positions).trim();
        });
        var angle = item.angle;
        var angleAngle = angle.angle && angle.angle.map(function (n, j) {
          return "".concat((0,utils/* getValue */.NA)(start.angle.angle[j].data, n.data, ratio)).concat(n.unit);
        }).join(' ');
        var anglePosition = angle.position && angle.position.map(function (n, j) {
          return "".concat((0,utils/* getValue */.NA)(start.angle.position[j].data, n.data, ratio)).concat(n.unit);
        }).join(' ');
        var newAngle = "".concat(angle.extent || '', " ").concat(angle.shape || '', " ").concat(angleAngle || '', " ").concat(anglePosition ? "at ".concat(anglePosition) : '').trim();
        value += "".concat(value ? ',' : '', " ").concat(item.type, "(").concat(newAngle ? "".concat(newAngle, ",") : '').concat(values.join(','), ")").trim();
      });
      return value;
    };

    _this.value = _value;
    _this.vars = _this.valueToIValue(_value);
    _this.defaultStartVars = _this.vars.map(function (item) {
      if (noGradient(item.type) || typeof item.values === 'string') {
        return (0,objectSpread2/* default */.Z)({}, item);
      }

      return (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, item), {}, {
        values: item.values.map(function (c) {
          var color;

          if (c.color && typeof c.color !== 'string') {
            color = (0,toConsumableArray/* default */.Z)(c.color);
            color[3] = 0;
          } else {
            color = c.color;
          }

          return {
            color: color,
            positions: (0,toConsumableArray/* default */.Z)(c.positions)
          };
        })
      });
    });
    return _this;
  }

  return (0,createClass/* default */.Z)(GradientsPlugin);
}(PluginMixins);

GradientsPlugin.className = 'GradientsPlugin';

// EXTERNAL MODULE: ./node_modules/tween-one/es/animate/ticker.js
var ticker = __webpack_require__(85879);
;// CONCATENATED MODULE: ./node_modules/tween-one/es/animate/timeline.js




var Timeline = /*#__PURE__*/function () {
  function Timeline() {
    var _this = this;

    (0,classCallCheck/* default */.Z)(this, Timeline);

    this.children = [];
    this.autoSleep = 200;
    this.tickerKey = void 0;
    this.startTime = void 0;

    this.addChild = function (animate) {
      if (_this.children.indexOf(animate) === -1) {
        // this.children = this.children.filter(c => c !== animate);
        _this.children.push(animate);

        _this.updateTickerState();
      } else {
        _this.start();
      }
    };

    this.removeChild = function (animate) {
      _this.children = _this.children.filter(function (c) {
        return c !== animate;
      });

      _this.updateTickerState();
    };

    this.kill = function (targets) {
      _this.children = _this.children.filter(function (c) {
        var currentTargets = c.root.targets;
        var newTargets = currentTargets.map(function (d, i) {
          if (targets.indexOf(d) === -1) {
            return d;
          } // c.root.vars = c.root.vars.filter((_: any, j: number) => j !== i);


          delete d._tweenOneVars;
          return;
        });
        c.root.targets = newTargets;
        var v = !!newTargets.filter(function (a) {
          return a;
        }).length;

        if (!v) {
          c.kill();
        }

        return v;
      });

      _this.updateTickerState();
    };

    this.killAll = function (clearChild) {
      if (clearChild) {
        _this.children.forEach(function (c) {
          c === null || c === void 0 ? void 0 : c.root.targets.forEach(function (d) {
            if (!d) {
              return;
            }

            delete d._tweenOneVars;
          });
        });

        _this.children = [];
      }

      ticker/* default.clear */.Z.clear(_this.tickerKey);
      _this.tickerKey = undefined;
    };

    this.getTotalTime = function () {
      var totalTime = 0;

      for (var i = 0; i < _this.children.length; i++) {
        var item = _this.children[i];
        var itemTime = item.pausedState ? 0 : item.startTime + item.totalTime;

        if (!totalTime) {
          totalTime = itemTime;
        } else {
          totalTime = Math.max(itemTime, totalTime);
        }
      }

      return totalTime;
    };

    this.updateTickerState = function () {
      /**
       * 暂停状态和播放完成状态不记入, 杀掉 ticker;
       */
      if (!_this.children.length || !_this.children.some(function (c) {
        return !(c === null || c === void 0 ? void 0 : c.pausedState) && (!(c === null || c === void 0 ? void 0 : c.reverseState) && c.progressTime < c.totalTime || (c === null || c === void 0 ? void 0 : c.reverseState) && c.progressTime > 0);
      })) {
        _this.killAll(!_this.children.length);
      } else {
        _this.start();
      }
    };

    this.start = function () {
      if (!_this.tickerKey) {
        _this.tickerKey = ticker/* default.add */.Z.add(_this.render);
      }
    };

    this.render = function (_ref) {
      var time = _ref.time,
          _ref$elapsed = _ref.elapsed,
          elapsed = _ref$elapsed === void 0 ? 0 : _ref$elapsed;
      // this.children.forEach(animate => {
      var children = _this.children;
      var length = children.length;

      for (var i = 0; i < length; i++) {
        var animate = children[i];

        if (!animate) {
          continue;
        }

        var startTime = animate.startTime - elapsed;
        var totalTime = animate.startTime + animate.totalTime + elapsed;

        if (time > startTime && time < totalTime && !animate.pausedState) {
          animate.render({
            time: time,
            elapsed: elapsed
          });
        }
      } // });

    };
  }

  (0,createClass/* default */.Z)(Timeline, [{
    key: "totalTime",
    get: function get() {
      return this.getTotalTime();
    }
  }]);

  return Timeline;
}();

/* harmony default export */ var timeline = (Timeline);
// EXTERNAL MODULE: ./node_modules/tween-one/es/animate/ease.js
var ease = __webpack_require__(69187);
;// CONCATENATED MODULE: ./node_modules/tween-one/es/animate/animateElement.js





/**
 * Animate
 * 动画处理器
 * 滤境管理
 *
 * Animate 时间组成
 * [1.---delay---][1.---duration---][1.---repeatDelay---][2.---duration---]
 * repeatDelay 跟在时间后面；
 * 总时间 totalTime: delay + duration * (repeat + 1) + repeatDelay * repeat;
 *
 * 回调事件处理
 * repeat = 0:
 * [---delay---][---onStart(0)---][---onUpdate(duration)---][---onComplete(totalTime)---]
 * repeat = 2:
 * 1.[---delay---][---onStart(0)---][---onUpdate(duration)---][---repeatDelay---]
 * 2.[---onRepeat(0)---][---onUpdate(duration)---][---repeatDelay---]
 * 3.[---onRepeat(0)---][---onUpdate( duration)---][---onComplete(totalTime)---]
 *
 */




var Element = /*#__PURE__*/function () {
  function Element(_item) {
    var _this = this;

    (0,classCallCheck/* default */.Z)(this, Element);

    this.item = void 0;
    this.vars = {};
    this.start = void 0;
    this.parent = void 0;
    this.root = void 0;
    this.startAt = {};
    this.mode = void 0;
    this.appearTo = 0;
    this.props = {};
    this.index = void 0;
    this.register = void 0;
    this.reverseStart = void 0;
    this.repeatNum = 0;
    this.prevMoment = void 0;
    this.easing = void 0;

    this.changeValueToVars = function (k, value, skipPlugin) {
      var isArray = (Array.isArray(value) || k.match(/color|fill|stroke/i) || k.match(utils/* shadowExp */.gU) && typeof value === 'string' || typeof value === 'string' && value.split(/[\s|,]/).length > 1) && !(k in plugins/* default */.Z);

      if (k in plugins/* default */.Z || isArray) {
        if (skipPlugin) {
          return value;
        }

        return {
          value: value,
          plugins: [],
          array: isArray
        };
      }

      var vars = parseFloat(value.toString().replace(/=/g, ''));
      var unit = value.toString().replace(/[^a-z|%]/g, ''); // +=, -= 匹配

      var count = value.toString().charAt(1) === '=' ? value.toString().replace(/[^\+\=|\-\=]/gi, '') : ''; // const startUnit = (this.startAt[k] && this.startAt[k].unit) || '';
      // console.log(unit, startUnit);

      /* if (
        unit !== startUnit &&
        this.startAt[k] &&
        this.startAt[k].vars !== getDefaultStart(k)
      ) {
        console.warn(
          `Warning: animation vars(${value}) units(${unit ||
            'px'}) are not equal to startAt(${startUnit || 'px'}).`,
        );
      } */

      return {
        vars: vars,
        unit: unit,
        count: count
      };
    };

    this.setEase = function (e) {
      if (typeof e === 'function') {
        _this.easing = e;
        return;
      } else if (e.match(/,/g)) {
        _this.easing = ease/* default.path */.Z.path(e);
        return;
      }

      _this.easing = ease/* default */.Z[e];
    };

    this.getTotalTime = function () {
      var _this$props = _this.props,
          _this$props$duration = _this$props.duration,
          duration = _this$props$duration === void 0 ? 450 : _this$props$duration,
          _this$props$delay = _this$props.delay,
          delay = _this$props$delay === void 0 ? 0 : _this$props$delay,
          _this$props$repeat = _this$props.repeat,
          repeat = _this$props$repeat === void 0 ? 0 : _this$props$repeat,
          _this$props$repeatDel = _this$props.repeatDelay,
          repeatDelay = _this$props$repeatDel === void 0 ? 0 : _this$props$repeatDel;
      return repeat === -1 ? Number.MAX_VALUE : delay + duration * (repeat + 1) + repeatDelay * repeat;
    };

    this.getEaseToRatio = function (r, isFrom) {
      var _this$props$ease = _this.props.ease,
          ease = _this$props$ease === void 0 ? '' : _this$props$ease;
      return (r === 0 || r === 1) && !(typeof ease === 'function' || ease.match(/,/g)) ? r : _this.easing(isFrom ? 1 - r : r, isFrom ? 1 : 0, isFrom ? 0 : 1, 1);
    };

    this.setRatioToVars = function (ratio) {
      var vars = _this.vars,
          root = _this.root;

      for (var i = 0; i < root.targets.length; i++) {
        if (!root.targets[i]) {
          continue;
        } // root.targets.forEach((_, i) => {


        for (var key in vars) {
          // Object.keys(vars).forEach((key: string) => {
          var item = vars[key];

          if (item.plugins) {
            if (key === 'PathMotion') {
              // pathMotion 的属性与 style 通用。不需新增；
              root.vars[i].style = item.plugins[i].render(ratio);
            } else {
              root.vars[i][key] = item.plugins[i].render(ratio);
            }

            continue;
          }

          var endVars = item.vars,
              count = item.count,
              unit = item.unit;
          var startVars = _this.start[i][key];
          root.vars[i][key] = (0,utils/* getValue */.NA)(startVars, endVars, ratio, count, unit); //});
        } //});

      }
    };

    this.onRegisterAnimate = function () {
      _this.register = true;
      var root = _this.root,
          parent = _this.parent,
          startAt = _this.startAt;
      var start = [];

      for (var i = 0; i < root.targets.length; i++) {
        var target = root.targets[i];
        var vars = root.vars[i];
        var s = {};

        for (var key in _this.vars) {
          var cItem = _this.vars[key];

          if (cItem.plugins) {
            var plugin = new plugins/* default */.Z[cItem.array ? 'ArrayPlugin' : key](cItem.value, key);
            plugin.target = target;
            plugin.root = root;
            plugin.parent = parent;
            plugin.targetIndex = i;
            plugin.tweenVars = vars;
            plugin.index = _this.index;
            plugin.startAt = startAt;
            s[key] = plugin.getAnimStart();
            cItem.plugins.push(plugin);
          } else {
            var _ref, _startAt$key;

            var targetValue = (_ref = root.attr ? target.getAttribute(key) : vars[key] || target[key]) !== null && _ref !== void 0 ? _ref : (0,utils/* getDefaultStart */.AG)(key);
            var startData = (_startAt$key = startAt[key]) !== null && _startAt$key !== void 0 ? _startAt$key : targetValue; // root.vars[i][key] ??

            var isStartAt = (0,esm_typeof/* default */.Z)(startData) === 'object' && 'vars' in startData && 'count' in startData;
            var unit = isStartAt ? startData.unit : "".concat(startData).replace(/[^a-z|%]/g, '');
            var varsUnit = cItem.unit;

            if (unit && unit !== varsUnit) {
              console.warn("Different units, start unit ".concat(unit, ", to value unit ").concat(varsUnit, ", remove start unit."));
            }

            s[key] = isStartAt ? (0,utils/* getStartAtValue */.kp)(targetValue, startData) : parseFloat(startData);
          }
        }

        start.push(s);
      }

      _this.start = start;
    };

    this.overflowRatio = function (ratio) {
      var r = ratio < 0 ? 0 : ratio;
      var duration = _this.props.duration;
      r = r > duration ? duration : r;
      return r;
    };

    this.render = function (_ref2) {
      var moment = _ref2.moment,
          _ref2$fps = _ref2.fps,
          fps = _ref2$fps === void 0 ? 0 : _ref2$fps,
          silence = _ref2.silence,
          render = _ref2.render;
      var parent = _this.parent,
          root = _this.root,
          props = _this.props;
      var targets = (0,utils/* flatArray */.Bn)(root.targets);
      var onChange = parent.onChange;
      var _props$repeat = props.repeat,
          repeat = _props$repeat === void 0 ? 0 : _props$repeat;
      var _props$type = props.type,
          type = _props$type === void 0 ? 'to' : _props$type,
          _props$duration = props.duration,
          duration = _props$duration === void 0 ? 450 : _props$duration,
          _props$delay = props.delay,
          delay = _props$delay === void 0 ? 0 : _props$delay,
          _props$repeatDelay = props.repeatDelay,
          repeatDelay = _props$repeatDelay === void 0 ? 0 : _props$repeatDelay,
          yoyo = props.yoyo;
      repeat = repeat === -1 ? Number.MAX_VALUE : repeat;
      var ratio = moment - delay; // const totalTime = duration + delay;

      var repeatNum = Math.floor(ratio / (duration + repeatDelay)) || 0;
      repeatNum = repeatNum > repeat ? repeat : repeatNum;
      repeatNum = repeatNum < 0 ? 0 : repeatNum;
      ratio = ratio - (duration + repeatDelay) * repeatNum;
      /**
       * 反向播放 isFrom 与 yoyoReverse 的区别
       * 反向播放: isFrom
       * [---delay---][---isFrom duration---]
       * yoyo
       * [---duration---][---delay---]
       * backwards
       * 两个都为 true 时为 false;
       */

      var yoyoReverse = !!(yoyo && repeatNum % 2);
      var isFrom = type === 'from';
      var backwards = yoyoReverse && isFrom ? false : yoyoReverse || isFrom;
      ratio = backwards ? duration - ratio : ratio;
      var fromDelay = isFrom ? 0 : delay;
      var r = backwards ? 1 : 0; // 0 进入时的注册

      if (!_this.register && moment >= fromDelay) {
        _this.onRegisterAnimate(); // 时间超出当前动画时间的处理


        if (backwards && ratio <= 0 || !backwards && ratio >= duration && duration) {
          // this.mode = 'onComplete';
          _this.prevMoment = moment;
          r = backwards ? 0 : 1;
        }

        _this.setRatioToVars(r); // 初始注册，改变外部 vars;


        onChange({
          index: _this.index,
          vars: root.vars
        });
      }

      if (_this.register && moment > delay - fps && moment < _this.totalTime + fps) {
        ratio = _this.overflowRatio(ratio);
        r = backwards ? 1 : 0;

        if (moment >= _this.totalTime && _this.mode !== 'onComplete' && _this.prevMoment !== undefined || _this.prevMoment === undefined && moment >= _this.totalTime && duration) {
          r = backwards ? 0 : 1;
          _this.mode = 'onComplete';

          if (_this.props.onComplete) {
            _this.props.onComplete({
              mode: _this.mode,
              index: _this.index,
              moment: ratio,
              ratio: r,
              targets: targets,
              vars: (0,utils/* flatArray */.Bn)(root.vars)
            });
          }
        } else if (_this.prevMoment === undefined || moment <= 0 && moment > -fps && _this.mode !== 'onStart' && _this.prevMoment > moment) {
          _this.mode = 'onStart';

          if (_this.props.onStart) {
            _this.props.onStart({
              mode: _this.mode,
              index: _this.index,
              moment: ratio,
              ratio: r,
              targets: targets,
              vars: (0,utils/* flatArray */.Bn)(root.vars)
            });
          }
        } else {
          r = ratio && duration ? ratio / duration : 0;
          _this.mode = 'onUpdate';

          if (_this.props.onUpdate) {
            _this.props.onUpdate({
              mode: _this.mode,
              index: _this.index,
              moment: ratio,
              ratio: r,
              targets: targets,
              vars: (0,utils/* flatArray */.Bn)(root.vars)
            });
          }
        }

        if (repeat && repeatNum !== _this.repeatNum && moment && _this.mode === 'onUpdate') {
          _this.mode = 'onRepeat';

          if (_this.props.onRepeat) {
            _this.props.onRepeat({
              mode: _this.mode,
              index: _this.index,
              moment: ratio,
              ratio: r,
              targets: targets,
              vars: (0,utils/* flatArray */.Bn)(_this.root.vars)
            });
          }
        }

        _this.setRatioToVars(_this.getEaseToRatio(r, isFrom));

        if (repeat) {
          _this.repeatNum = repeatNum;
        }

        var cb = {
          mode: _this.mode,
          moment: ratio,
          repeat: repeatNum,
          ratio: r,
          targets: root.targets,
          vars: root.vars,
          index: _this.index
        };

        if (silence) {
          cb.silence = silence;
        }

        if (render) {
          cb.render = render;
        }

        onChange(cb);
        _this.prevMoment = moment;
      }
    };

    this.item = _item; // delete item.appearTo;

    this.startAt = (0,objectSpread2/* default */.Z)({}, _item.startAt);
    Object.keys(this.startAt).forEach(function (c) {
      _this.startAt[c] = _this.changeValueToVars(c, _this.startAt[c], true);
    }); // delete item.startAt;

    var _props = {};

    for (var k in _item) {
      var value = _item[k];

      if (!(k in utils/* initAnimProps */.$e)) {
        this.vars[k] = this.changeValueToVars(k, value);
      } else {
        _props[k] = value;
      }
    }

    this.props = (0,objectSpread2/* default */.Z)((0,objectSpread2/* default */.Z)({}, utils/* initAnimProps */.$e), _props);
    this.setEase(this.props.ease);
  }

  (0,createClass/* default */.Z)(Element, [{
    key: "totalTime",
    get: // parentBackwards?: boolean;
    function get() {
      return this.getTotalTime();
    }
  }]);

  return Element;
}();


;// CONCATENATED MODULE: ./node_modules/tween-one/es/animate/animate.js






var AnimateGroup = /*#__PURE__*/(0,createClass/* default */.Z)(function AnimateGroup(_props) {
  var _this = this;

  (0,classCallCheck/* default */.Z)(this, AnimateGroup);

  this.props = void 0;
  this.id = void 0;
  this.children = [];
  this.totalTime = 0;
  this.totalTimeRegion = 0;
  this.childTotalTime = 0;
  this.childRegionTotalTime = 0;
  this.prevMoment = void 0;
  this.progressTime = 0;
  this.progressMoment = -1;
  this.startMoment = 0;
  this.startTime = 0;
  this.repeatNum = 0;
  this.mode = 'onTimelineStart';
  this.pausedState = void 0;
  this.reverseState = void 0;
  this.root = void 0;
  this.parent = void 0;
  this.regionStartTime = 0;
  this.regionEndTime = void 0;
  this.onChangeChild = void 0;
  this.onChangeTimeline = void 0;

  this.init = function () {
    var _this$props = _this.props,
        reverse = _this$props.reverse,
        animation = _this$props.animation,
        moment = _this$props.moment;
    var animateArray = (0,utils/* dataToArray */.Zk)(animation);

    for (var i = 0; i < animateArray.length; i++) {
      var item = animateArray[i];

      if (item.type === 'set') {
        item.duration = 0;
      } //animateArray.forEach((item: any, i: number) => {


      var animate = new Element(item);
      animate.index = i;
      var pos = i ? (0,utils/* getAnimatePos */.nV)(item, animateArray[i - 1]) : 0;
      item.appearTo = pos;
      animate.appearTo = pos;

      _this.addChild(animate); //});

    } // 注册


    _this.render({
      time: (reverse ? _this.totalTime : 0) + _this.startTime,
      elapsed: 16.67
    });

    if (!_this.totalTime) {
      _this.render({
        time: (reverse ? _this.totalTime : 0) + _this.startTime,
        elapsed: 16.67
      });
    }

    if (moment) {
      _this.goto(moment);
    } else {
      _this.play();
    }
  };

  this.addChild = function (animate) {
    animate.parent = _this;
    animate.root = _this.root;

    if (_this.children.indexOf(animate) === -1) {
      _this.children.push(animate);

      _this.setTotalTime();
    }
  };

  this.setTotalTime = function () {
    _this.childTotalTime = 0;
    _this.childRegionTotalTime = 0;

    for (var i = 0; i < _this.children.length; i++) {
      var item = _this.children[i];

      if (item.appearTo !== _this.childTotalTime) {
        var itemTime = item.appearTo + item.totalTime;

        if (itemTime > _this.childTotalTime) {
          _this.childTotalTime = itemTime;
          _this.childRegionTotalTime = itemTime;
        }
      } else {
        _this.childTotalTime += item.totalTime;
        _this.childRegionTotalTime += item.totalTime;
      }
    }

    if (_this.regionStartTime) {
      _this.childRegionTotalTime -= _this.regionStartTime;
    }

    if (_this.regionEndTime) {
      _this.childRegionTotalTime = _this.regionEndTime - _this.regionStartTime;
    }

    var _this$props2 = _this.props,
        _this$props2$repeat = _this$props2.repeat,
        repeat = _this$props2$repeat === void 0 ? 0 : _this$props2$repeat,
        _this$props2$repeatDe = _this$props2.repeatDelay,
        repeatDelay = _this$props2$repeatDe === void 0 ? 0 : _this$props2$repeatDe,
        delay = _this$props2.delay;
    _this.totalTime = repeat === -1 ? Number.MAX_VALUE : delay + _this.childTotalTime * (repeat + 1) + repeatDelay * repeat;
    _this.totalTimeRegion = repeat === -1 ? Number.MAX_VALUE : delay + _this.childRegionTotalTime * (repeat + 1) + repeatDelay * repeat;
  };

  this.setStartTimeOrMoment = function (start) {
    _this.startTime = ticker/* default.time */.Z.time;
    _this.startMoment = start || _this.progressMoment;
  };

  this.reRenderCall = function () {
    _this.render({
      time: _this.startTime,
      elapsed: ticker/* default.elapsed */.Z.elapsed || ticker/* default.frameFPS */.Z.frameFPS
    });
  };

  this.play = function (v) {
    if (!v) {
      var _this$parent;

      (_this$parent = _this.parent) === null || _this$parent === void 0 ? void 0 : _this$parent.addChild(_this);
    } else {
      var _this$parent2;

      (_this$parent2 = _this.parent) === null || _this$parent2 === void 0 ? void 0 : _this$parent2.updateTickerState();
    }
  };

  this.paused = function () {
    var v = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    _this.pausedState = v;

    _this.setStartTimeOrMoment();

    _this.play(v);
  };

  this.reverse = function (v) {
    _this.reverseState = v;

    _this.setStartTimeOrMoment();

    _this.play(_this.pausedState);
  };

  this.goto = function ($moment, paused) {
    var moment = $moment - _this.regionStartTime;
    _this.startTime = ticker/* default.time */.Z.time;
    _this.startMoment = moment > _this.totalTime ? _this.totalTime : moment;
    _this.progressMoment = _this.startMoment;
    _this.progressTime = moment;

    _this.play(_this.pausedState);

    _this.reRenderCall();

    if (!!paused !== _this.pausedState) {
      _this.paused(paused);
    }
  };

  this.kill = function (index) {
    if (typeof index === 'number') {
      _this.paused();

      delete _this.children[index];

      _this.setTotalTime();

      _this.paused(false);
    } else {
      var _this$parent3;

      _this.children = [];
      (_this$parent3 = _this.parent) === null || _this$parent3 === void 0 ? void 0 : _this$parent3.removeChild(_this);
    }
  };

  this.onChange = function (e) {
    e.timelineMoment = _this.progressMoment;

    _this.onChangeChild(e);
  };

  this.render = function (_ref) {
    var time = _ref.time,
        elapsed = _ref.elapsed;
    var fps = elapsed || ticker/* default.frameFPS */.Z.frameFPS || 0;
    var totalTime = _this.totalTime,
        totalTimeRegion = _this.totalTimeRegion,
        childTotalTime = _this.childTotalTime,
        childRegionTotalTime = _this.childRegionTotalTime,
        children = _this.children,
        props = _this.props,
        startTime = _this.startTime,
        reverseState = _this.reverseState,
        pausedState = _this.pausedState,
        startMoment = _this.startMoment,
        onChangeTimeline = _this.onChangeTimeline,
        parent = _this.parent,
        root = _this.root,
        prevMoment = _this.prevMoment,
        regionStartTime = _this.regionStartTime;
    var _props$repeatDelay = props.repeatDelay,
        repeatDelay = _props$repeatDelay === void 0 ? 0 : _props$repeatDelay,
        yoyo = props.yoyo,
        delay = props.delay;
    var _props$repeat = props.repeat,
        repeat = _props$repeat === void 0 ? 0 : _props$repeat;
    repeat = repeat === -1 ? Number.MAX_VALUE : repeat;
    var t = time - startTime - delay;
    var m = reverseState ? startMoment - t : t + startMoment;

    if (m < -fps) {
      return;
    }

    var moment = m < 0 ? 0 : m;
    moment = moment > totalTime ? totalTime : moment;
    moment = startMoment < regionStartTime ? m : moment;
    moment = startMoment > totalTimeRegion ? startMoment : moment;
    var repeatNum = repeat ? Math.floor(moment / (childRegionTotalTime + repeatDelay)) : 0;
    repeatNum = repeat && repeatNum > repeat ? repeat : repeatNum;
    var tweenMoment = moment - (childRegionTotalTime + repeatDelay) * repeatNum;
    var yoyoReverse = !!(yoyo && repeatNum % 2);
    tweenMoment = yoyoReverse ? childRegionTotalTime - tweenMoment : tweenMoment;
    tweenMoment = regionStartTime + tweenMoment;
    var reverse = reverseState ? !yoyoReverse : yoyoReverse;
    _this.mode = 'onTimelineUpdate';

    if (typeof prevMoment !== 'number') {
      _this.mode = 'onTimelineStart';
    }

    if (moment >= totalTimeRegion - delay && typeof prevMoment === 'number') {
      _this.mode = 'onTimelineComplete';
    }

    if (repeatNum !== _this.repeatNum) {
      _this.mode = 'onTimelineRepeat'; // 补帧状态;

      if (moment > childTotalTime * repeatNum && moment < childTotalTime * repeatNum + fps) {
        for (var i = reverse ? 0 : children.length - 1; reverse ? i <= children.length - 1 : i >= 0; reverse ? i++ : i--) {
          var item = children[i]; // console.log('时间轴补帧状态', i);
          // console.log('reverse', reverse);

          if (!reverse) {
            item.prevMoment = undefined;
          }

          item.render({
            moment: reverse ? item.totalTime : 0,
            fps: fps
          });
        }

        onChangeTimeline({
          moment: moment,
          totalTime: totalTime,
          repeat: repeatNum,
          mode: _this.mode,
          targets: root.targets
        });
        _this.mode = 'onTimelineUpdate';
      }
    }

    if (repeat) {
      _this.repeatNum = repeatNum;
    }

    _this.progressMoment = moment;
    _this.prevMoment = moment;
    _this.progressTime = t; // children.forEach(item => {

    for (var _i = 0; _i < children.length; _i++) {
      var _item = children[_i];
      /* if (!item) {
        return;
      } */

      var duration = _item.totalTime + _item.appearTo;
      var tweenTime = tweenMoment >= _item.appearTo - fps && tweenMoment < duration + fps; // 过帧补

      if (_item.mode !== 'onComplete' && tweenMoment > duration + fps && !yoyoReverse && _item.totalTime || typeof _item.mode === 'undefined' && !_item.totalTime // 时间为 0 时的过补条件
      ) {
        // console.log('结束', i, item.totalTime, repeatNum, yoyoReverse);
        _item.render({
          moment: _item.totalTime,
          fps: fps
        });

        _item.prevMoment = undefined;
      }

      if (tweenMoment < _item.appearTo - fps && _item.mode && _item.mode !== 'onStart'
      /* && item.totalTime ||
      (typeof item.mode === 'undefined' && !item.totalTime) */
      ) {
        // console.log('重置', i, item.appearTo, tweenMoment, item.prevMoment, item.mode);
        _item.render({
          moment: _item.appearTo,
          fps: fps,
          silence: true
        });

        _item.prevMoment = undefined;
        _item.mode = undefined;
      }

      if (tweenTime) {
        var _t = tweenMoment < 0 ? 0 : tweenMoment;

        if (tweenMoment > duration && _item.mode === 'onComplete' && !yoyoReverse) {
          return;
        }

        _t = tweenMoment > duration ? duration : tweenMoment; // item.parentBackwards = reverse;

        _item.render({
          moment: _t - _item.appearTo,
          fps: fps
        });

        if (!duration) {
          // console.log('set 状态补帧', i);
          _item.render({
            moment: _item.totalTime,
            fps: fps,
            render: true
          });

          _item.prevMoment = undefined;
        }
      }
    } // });


    onChangeTimeline({
      moment: moment,
      totalTime: totalTime,
      repeat: repeatNum,
      mode: _this.mode,
      targets: root.targets
    });

    if (pausedState || totalTimeRegion && m + delay >= totalTimeRegion && !reverseState || reverseState && m + delay <= 0 || !children.length) {
      parent === null || parent === void 0 ? void 0 : parent.removeChild(_this);
    }
  };

  this.props = _props;
  var _this$props3 = this.props,
      _paused = _this$props3.paused,
      _reverse = _this$props3.reverse;
  this.reverseState = _reverse;
  this.pausedState = _paused;
  this.regionStartTime = _props.regionStartTime || 0;
  this.regionEndTime = _props.regionEndTime;
});


;// CONCATENATED MODULE: ./node_modules/tween-one/es/TweenOne.js













plugins/* default.push */.Z.push(plugins_ArrayPlugin);
plugins/* default.push */.Z.push(GradientsPlugin);
plugins/* default.push */.Z.push(StylePlugin);
var tweenId = 0;
var globalTimeline = new timeline();

var Tween = /*#__PURE__*/function () {
  function Tween(targets, _props) {
    var _this = this;

    (0,classCallCheck/* default */.Z)(this, Tween);

    this.targets = void 0;
    this.props = void 0;
    this.timeline = void 0;
    this.animate = void 0;
    this.$reverse = false;
    this.vars = [];
    this.initTime = void 0;
    this.attr = void 0;

    this.init = /*#__PURE__*/function () {
      var _ref = (0,asyncToGenerator/* default */.Z)( /*#__PURE__*/regenerator_default().mark(function _callee(vars) {
        var props;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                props = (0,utils/* getInitProps */.Sx)(vars);

                if (_this.targets[0].tagName && !_this.attr) {
                  props.animation = (0,utils/* dataToArray */.Zk)(props.animation).map(function (item) {
                    var c = {
                      style: {}
                    };

                    for (var k in item) {
                      //Object.keys(item).forEach(k => {
                      if (k in plugins/* default */.Z || k in utils/* initAnimProps */.$e) {
                        c[k] = item[k];
                      } else {
                        c.style[k] = item[k];
                      } //});

                    }

                    if (!Object.keys(c.style).length) {
                      delete c.style;
                    } // 时间去掉小数点;


                    if (item.duration) {
                      item.duration = Math.round(item.duration);
                    }

                    if (item.delay) {
                      item.delay = Math.round(item.delay);
                    }

                    if (item.appearTo) {
                      item.appearTo = Math.round(item.appearTo);
                    }

                    if (item.repeatDelay) {
                      item.repeatDelay = Math.round(item.repeatDelay);
                    }

                    return c;
                  });
                }

                _this.animate = new AnimateGroup(props);
                _this.animate.id = "TweenOne_".concat(tweenId);
                tweenId++;
                _this.animate.startTime = _this.initTime;
                _this.animate.onChangeChild = _this.onChange;
                _this.animate.onChangeTimeline = _this.onChangeTimeline;
                _this.animate.root = _this;
                _this.animate.parent = _this.timeline;

                _this.animate.init();

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }();

    this.renderToDom = function () {
      // vars.forEach((item, i) => {
      for (var i = 0; i < _this.vars.length; i++) {
        var item = _this.vars[i]; // Object.keys(item).forEach((key: string) => {

        for (var key in item) {
          var value = item[key];
          var target = _this.targets[i];

          if (!target) {
            continue;
          }

          if (_this.props.attr && target.tagName && target.setAttribute) {
            if (key === 'style') {
              // Object.keys(value).forEach(key => {
              for (var ck in value) {
                target.style[ck] = value[key];
              } // });

            }

            target.setAttribute(key, value);
          } else if (key in plugins/* default */.Z) {
            var $key = plugins/* default */.Z[key].key;

            if (typeof target[$key] === 'function') {
              target[$key](value.attr, value.path);
            } else if ((0,esm_typeof/* default */.Z)(value) === 'object' && (0,esm_typeof/* default */.Z)(target[$key]) === 'object' && $key) {
              //Object.keys(value).forEach(ck => {
              for (var _ck in value) {
                var va = value[_ck];

                if ($key === '__self') {
                  target[_ck] = va;
                } else {
                  target[$key][_ck] = (0,esm_typeof/* default */.Z)(va) === 'object' && va.text || va;
                }
              } //});

            } else {
              target[$key || key] = value;
            }
          } else {
            target[key] = value;
          } // });

        }
      } //});

    };

    this.onChange = function (e) {
      if (e.mode === 'onComplete' && e.render) {
        _this.renderToDom();
      }

      if (e.mode && _this.props.onChange && !e.silence) {
        e.targets = (0,utils/* flatArray */.Bn)(e.targets);
        e.vars = (0,utils/* flatArray */.Bn)(e.vars);

        _this.props.onChange(e);
      }
    };

    this.onChangeTimeline = function (e) {
      _this.renderToDom(); // 时间轴结束后清除元素上的缓存


      if (e.mode === 'onTimelineComplete') {
        var _e$targets;

        (_e$targets = e.targets) === null || _e$targets === void 0 ? void 0 : _e$targets.forEach(function (item) {
          delete item._tweenOneVars;
        });
      }

      if (e.mode && _this.props.onChangeTimeline) {
        e.targets = (0,utils/* flatArray */.Bn)(e.targets);
        e.vars = (0,utils/* flatArray */.Bn)(_this.vars);

        _this.props.onChangeTimeline(e);
      }
    };

    this.goto = function (moment, paused) {
      _this.targets.forEach(function (item) {
        if (!item) {
          return;
        } // item._tweenOneVars = {};


        Object.keys(item._tweenOneVars || {}).forEach(function (key) {
          delete item._tweenOneVars[key];
        });
      });

      _this.animate.goto(moment, paused);
    };

    this.kill = function (index) {
      _this.animate.kill(index);
    };

    this.targets = targets;
    this.props = _props;
    this.timeline = globalTimeline;
    this.initTime = ticker/* default.time */.Z.time;
    this.attr = _props.attr;
    targets.forEach(function (item) {
      _this.vars.push(item._tweenOneVars);
    });
    this.init(_props);
  }

  (0,createClass/* default */.Z)(Tween, [{
    key: "paused",
    get: function get() {
      return this.animate.pausedState;
    },
    set: function set(v) {
      this.animate.paused(v);
    }
  }, {
    key: "reverse",
    get: function get() {
      return this.$reverse;
    },
    set: function set(v) {
      this.$reverse = v;
      this.animate.reverse(v);
    }
  }, {
    key: "regionStartTime",
    get: function get() {
      return this.animate.regionStartTime;
    },
    set: function set(v) {
      this.animate.regionStartTime = v;
      this.animate.setTotalTime();
    }
  }, {
    key: "regionEndTime",
    get: function get() {
      return this.animate.regionEndTime || this.animate.totalTime;
    },
    set: function set(v) {
      this.animate.regionEndTime = v;
      this.animate.setTotalTime();
    }
  }]);

  return Tween;
}();

var TweenOne = function TweenOne(targets, vars) {
  if (!targets) {
    console.error("Error: targets is undefined.");
    return undefined;
  }

  if (ticker/* default.state */.Z.state !== 'wake') {
    // 先将 ticker 唤醒，避免同时添加时 initTime 出错；
    ticker/* default.wake */.Z.wake();
  }

  var t = (0,utils/* dataToArray */.Zk)(targets).map(function (item) {
    item._tweenOneVars = item._tweenOneVars || {};
    return item;
  }); // 分解 targets 里的元素类型

  var doms = t.filter(function (c) {
    return c.tagName;
  });
  var objs = t.filter(function (c) {
    return !c.tagName;
  });
  var tween = [];

  if (doms.length) {
    tween.push(new Tween(doms, vars));
  }

  if (objs.length) {
    tween.push(new Tween(objs, vars));
  }

  return (0,utils/* flatArray */.Bn)(tween);
};

TweenOne.kill = function (targets) {
  if (typeof targets === 'undefined') {
    globalTimeline.killAll(true);
  } else {
    globalTimeline.kill((0,utils/* dataToArray */.Zk)(targets));
  }
};

TweenOne.plugins = plugins/* default */.Z;
/* harmony default export */ var es_TweenOne = (TweenOne);

;// CONCATENATED MODULE: ./node_modules/tween-one/es/index.js













/* harmony default export */ var es = (es_TweenOne);

/***/ }),

/***/ 31529:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Plugin */
/* harmony import */ var _babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(43144);
/* harmony import */ var _babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15671);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(29822);



/**
 * Plugins
 * 管理滤境，如 cssStyle, svg path
 */


var Plugin = /*#__PURE__*/(0,_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(function Plugin() {
  var _this = this;

  (0,_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .Z)(this, Plugin);

  this.push = function (plugins) {
    (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .dataToArray */ .Zk)(plugins).forEach(function (item) {
      _this[item.className] = item;
    });
  };

  this.register = this.push;
});

/* harmony default export */ __webpack_exports__["Z"] = (new Plugin());


/***/ }),

/***/ 29822:
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$e": function() { return /* binding */ initAnimProps; },
/* harmony export */   "AG": function() { return /* binding */ getDefaultStart; },
/* harmony export */   "Bn": function() { return /* binding */ flatArray; },
/* harmony export */   "Dx": function() { return /* binding */ getComputedStyle; },
/* harmony export */   "Fi": function() { return /* binding */ styleValueToArray; },
/* harmony export */   "NA": function() { return /* binding */ getValue; },
/* harmony export */   "Q6": function() { return /* binding */ windowIsUndefined; },
/* harmony export */   "Sx": function() { return /* binding */ getInitProps; },
/* harmony export */   "Zk": function() { return /* binding */ dataToArray; },
/* harmony export */   "cP": function() { return /* binding */ parsePath; },
/* harmony export */   "eL": function() { return /* binding */ initFilterValue; },
/* harmony export */   "gU": function() { return /* binding */ shadowExp; },
/* harmony export */   "hK": function() { return /* binding */ getTime; },
/* harmony export */   "kp": function() { return /* binding */ getStartAtValue; },
/* harmony export */   "nV": function() { return /* binding */ getAnimatePos; },
/* harmony export */   "o7": function() { return /* binding */ startConvertToEndUnit; },
/* harmony export */   "q$": function() { return /* binding */ getTransformValue; },
/* harmony export */   "rV": function() { return /* binding */ colorRegExp; }
/* harmony export */ });
/* unused harmony exports noop, initProps */
/* harmony import */ var style_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52191);

function noop() {}
var colorRegExp = style_utils__WEBPACK_IMPORTED_MODULE_0__/* .colorRegExp */ .rV;
var shadowExp = /.*shadow$/gi;
var windowIsUndefined = !(typeof window !== 'undefined' && window.document && window.document.createElement);
var getTime = Date.now;
function parsePath(path) {
  if (typeof path === 'string') {
    if (path.charAt(0).match(/m/i)) {
      var domPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');
      domPath.setAttributeNS(null, 'd', path);
      return domPath;
    }

    return document.querySelector(path);
  } else if (path.style) {
    return path;
  }

  throw new Error('Error while parsing the path');
}
var initAnimProps = {
  type: 'to',
  duration: 450,
  delay: 0,
  repeat: 0,
  repeatDelay: 0,
  appearTo: 0,
  yoyo: false,
  ease: 'easeInOutQuad',
  onStart: noop,
  onUpdate: noop,
  onComplete: noop,
  onRepeat: noop,
  startAt: {}
};
var initProps = {
  animation: {},
  paused: false,
  reverse: false,
  delay: 0,
  repeat: 0,
  repeatDelay: 0,
  yoyo: false,
  moment: null,
  resetStyle: false,
  regionStartTime: 0,
  regionEndTime: undefined,
  onChange: noop,
  onChangeTimeline: noop
};
var getInitProps = function getInitProps(props) {
  var p = {};
  Object.keys(initProps).forEach(function (k) {
    p[k] = typeof props[k] === 'undefined' ? initProps[k] : props[k];
  }); // 时间去掉小数点;

  if (p.delay) {
    p.delay = Math.round(p.delay);
  }

  if (props.repeatDelay) {
    p.repeatDelay = Math.round(p.repeatDelay);
  }

  return p;
};
var dataToArray = function dataToArray(d) {
  if (Array.isArray(d) || !d) {
    return d;
  }

  if (d.length) {
    var t = Array.prototype.slice.call(d);
    return t.length ? [d] : t;
  }

  return [d];
};
var flatArray = function flatArray(d) {
  return d.length === 1 ? d[0] : d;
};
var getAnimatePos = function getAnimatePos(animate, _ref) {
  var _ref$appearTo = _ref.appearTo,
      appearTo = _ref$appearTo === void 0 ? 0 : _ref$appearTo,
      _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 450 : _ref$duration,
      repeat = _ref.repeat,
      repeatDelay = _ref.repeatDelay;

  if (typeof appearTo === 'string') {
    return 0;
  }

  var appearToTime;
  var v = 0;

  if (typeof animate.appearTo === 'number') {
    return animate.appearTo;
  }

  if (typeof animate.appearTo === 'string' && animate.appearTo.charAt(1) === '=') {
    v = parseFloat(animate.appearTo.replace('=', ''));
  }

  appearToTime = appearTo + delay + duration + v;

  if (repeat === -1) {
    appearToTime = Number.MAX_VALUE;
  } else if (repeat) {
    appearToTime = appearTo + delay + duration * (repeat + 1) + (repeatDelay || 0) * repeat + v;
  }

  return appearToTime;
};
var getDefaultStart = function getDefaultStart(key) {
  switch (key) {
    case 'opacity':
    case 'scaleX':
    case 'scaleY':
    case 'scale':
      return 1;

    default:
      return 0;
  }
};
var getStartAtValue = function getStartAtValue(start, startAt) {
  var value = typeof start === 'string' ? parseFloat(start) : start;
  return getValue(value, startAt.vars, 1, startAt.count, startAt.unit);
};
var getValue = function getValue(startVars, endVars, ratio) {
  var count = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
  var unit = arguments.length > 4 ? arguments[4] : undefined;
  return count === '+=' || count === '-=' ? startVars + endVars * ratio + (unit || 0) : (endVars - startVars) * ratio + startVars + (unit || 0);
};
var getComputedStyle = function getComputedStyle(target) {
  if (!target) {
    return {};
  }

  var style = typeof window !== 'undefined' && document.defaultView ? document.defaultView.getComputedStyle(target) : {};
  return style;
};
var styleValueToArray = {
  margin: 1,
  padding: 1,
  borderWidth: 1,
  borderRadius: 1
};
function startConvertToEndUnit(_ref2) {
  var target = _ref2.target,
      computedStyle = _ref2.computedStyle,
      style = _ref2.style,
      value = _ref2.value,
      startUnit = _ref2.startUnit,
      endUnit = _ref2.endUnit,
      fixed = _ref2.fixed,
      isOriginWidth = _ref2.isOriginWidth,
      useCurrentTarget = _ref2.useCurrentTarget;

  if (windowIsUndefined) {
    return value;
  }

  var horiz = /(?:Left|Right|Width|X)/i.test(style) || isOriginWidth;
  horiz = style === 'padding' || style === 'marign' ? true : horiz;
  var t = style.indexOf('border') !== -1 || style.indexOf('translate') !== -1 || style === 'transformOrigin' || useCurrentTarget ? target : target.parentNode || document.body;
  t = fixed ? document.body : t;
  var pix;
  var htmlComputedStyle;
  var warPix; // transform 在 safari 下会留着单位，chrome 下会全部转换成 px;

  switch (startUnit) {
    case '%':
      pix = parseFloat(value) / 100 * (horiz ? t.clientWidth : t.clientHeight);
      break;

    case 'vw':
      pix = parseFloat(value) * document.body.clientWidth / 100;
      break;

    case 'vh':
      pix = parseFloat(value) * document.body.clientHeight / 100;
      break;

    case 'em':
      if (!computedStyle) {
        warPix = 'em';
        pix = parseFloat(value);
      } else {
        pix = parseFloat(value) * parseFloat(computedStyle.fontSize);
      }

      break;

    case 'rem':
      {
        if (!computedStyle) {
          warPix = 'rem';
          pix = parseFloat(value);
        } else {
          htmlComputedStyle = window.getComputedStyle(document.getElementsByTagName('html')[0]);
          pix = parseFloat(value) * parseFloat(htmlComputedStyle.fontSize);
        }

        break;
      }

    default:
      pix = parseFloat(value);
      break;
  }

  switch (endUnit) {
    case '%':
      pix = pix ? pix * 100 / (horiz ? t.clientWidth : t.clientHeight) : 0;
      break;

    case 'vw':
      pix = parseFloat(value) / document.body.clientWidth * 100;
      break;

    case 'vh':
      pix = parseFloat(value) / document.body.clientHeight * 100;
      break;

    case 'em':
      if (!computedStyle) {
        warPix = 'em';
        pix = parseFloat(value);
      } else {
        pix = parseFloat(value) / parseFloat(computedStyle.fontSize);
      }

      break;

    case 'rem':
      {
        if (!computedStyle) {
          warPix = 'rem';
          pix = parseFloat(value);
        } else {
          htmlComputedStyle = htmlComputedStyle || window.getComputedStyle(document.getElementsByTagName('html')[0]);
          pix = parseFloat(value) / parseFloat(htmlComputedStyle.fontSize);
        }

        break;
      }

    default:
      break;
  }

  if (warPix) {
    console.warn("Warning: Element is not 'DOM, can not use '".concat(warPix, "', automatically convert to animation units."));
  }

  return pix;
}
function getTransformValue(t) {
  if (typeof t === 'string') {
    return t;
  }

  var perspective = t.perspective;
  var angle = t.rotate;
  var rotateX = t.rotateX;
  var rotateY = t.rotateY;
  var sx = t.scaleX;
  var sy = t.scaleY;
  var sz = t.scaleZ;
  var skx = t.skewX;
  var sky = t.skewY;
  var translateX = typeof t.translateX === 'string' ? t.translateX : "".concat(t.translateX, "px");
  var translateY = typeof t.translateY === 'string' ? t.translateY : "".concat(t.translateY, "px");
  var translateZ = typeof t.translateZ === 'string' ? t.translateZ : "".concat(t.translateZ, "px");
  var sk = skx || sky ? "skew(".concat(skx, "deg,").concat(sky, "deg)") : '';
  var an = angle ? "rotate(".concat(angle, "deg)") : '';
  var ss = sx !== 1 || sy !== 1 || sz !== 1 ? "scale3d(".concat(sx, ",").concat(sy, ",").concat(sz, ")") : '';
  var rX = rotateX ? "rotateX(".concat(rotateX, "deg)") : '';
  var rY = rotateY ? "rotateY(".concat(rotateY, "deg)") : '';
  var per = perspective ? "perspective(".concat(perspective, "px)") : '';
  var defaultTranslate = ss || an || rX || rY || sk ? '' : 'translate(0px, 0px)';
  var translate = t.translateZ ? "translate3d(".concat(translateX, ",").concat(translateY, ",").concat(translateZ, ")") : (t.translateX || t.translateY) && "translate(".concat(translateX, ",").concat(translateY, ")") || defaultTranslate;
  return "".concat(per, " ").concat(translate, " ").concat(ss, " ").concat(an, " ").concat(rX, " ").concat(rY, " ").concat(sk).trim();
}
/* export const styleToString = (v: IObject) => {
  let s = '';
  Object.keys(v).forEach(k => {
    s += `${toCssLowerCase(k)}: ${v[k]}; `;
  });
  return s;
};*/

var initFilterValue = {
  brightness: 1,
  saturate: 1,
  contrast: 1,
  grayScale: 0,
  hueRotate: '0deg',
  sepia: 0,
  invert: 0
};

/***/ }),

/***/ 17061:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var _typeof = (__webpack_require__(18698)["default"]);
function _regeneratorRuntime() {
  "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
    return exports;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  var exports = {},
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    },
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value: value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
      generator = Object.create(protoGenerator.prototype),
      context = new Context(tryLocsList || []);
    return defineProperty(generator, "_invoke", {
      value: makeInvokeMethod(innerFn, self, context)
    }), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if ("throw" !== record.type) {
        var result = record.arg,
          value = result.value;
        return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
          invoke("next", value, resolve, reject);
        }, function (err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function (unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function (error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    defineProperty(this, "_invoke", {
      value: function value(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(innerFn, self, context) {
    var state = "suspendedStart";
    return function (method, arg) {
      if ("executing" === state) throw new Error("Generator is already running");
      if ("completed" === state) {
        if ("throw" === method) throw arg;
        return doneResult();
      }
      for (context.method = method, context.arg = arg;;) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }
        if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {
          if ("suspendedStart" === state) throw state = "completed", context.arg;
          context.dispatchException(context.arg);
        } else "return" === context.method && context.abrupt("return", context.arg);
        state = "executing";
        var record = tryCatch(innerFn, self, context);
        if ("normal" === record.type) {
          if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
          return {
            value: record.arg,
            done: context.done
          };
        }
        "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method,
      method = delegate.iterator[methodName];
    if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
    var record = tryCatch(method, delegate.iterator, context.arg);
    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) return iteratorMethod.call(iterable);
      if ("function" == typeof iterable.next) return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1,
          next = function next() {
            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
            return next.value = undefined, next.done = !0, next;
          };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: undefined,
      done: !0
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), defineProperty(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
    var ctor = "function" == typeof genFun && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
  }, exports.mark = function (genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function (arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    void 0 === PromiseImpl && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
    return this;
  }), define(Gp, "toString", function () {
    return "[object Generator]";
  }), exports.keys = function (val) {
    var object = Object(val),
      keys = [];
    for (var key in object) keys.push(key);
    return keys.reverse(), function next() {
      for (; keys.length;) {
        var key = keys.pop();
        if (key in object) return next.value = key, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
    },
    stop: function stop() {
      this.done = !0;
      var rootRecord = this.tryEntries[0].completion;
      if ("throw" === rootRecord.type) throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i],
          record = entry.completion;
        if ("root" === entry.tryLoc) return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"),
            hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
          } else {
            if (!hasFinally) throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if ("throw" === record.type) throw record.arg;
      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if ("throw" === record.type) {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
    }
  }, exports;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 18698:
/***/ (function(module) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 64687:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// TODO(Babel 8): Remove this file.

var runtime = __webpack_require__(17061)();
module.exports = runtime;

// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=
try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ })

}]);